{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.set.difference.v2.js\";\nimport \"core-js/modules/esnext.set.intersection.v2.js\";\nimport \"core-js/modules/esnext.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/esnext.set.is-subset-of.v2.js\";\nimport \"core-js/modules/esnext.set.is-superset-of.v2.js\";\nimport \"core-js/modules/esnext.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/esnext.set.union.v2.js\";\n/*!\r\n  * core-base v9.13.1\r\n  * (c) 2024 kazuya kawaguchi\r\n  * Released under the MIT License.\r\n  */\nimport { getGlobalThis, isObject, isFunction, isString, isNumber, isPlainObject, assign, join, toDisplayString, isArray, incrementer, format as format$1, isPromise, isBoolean, warn, isRegExp, warnOnce, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate } from '@intlify/shared';\nimport { CompileWarnCodes, CompileErrorCodes, createCompileError, detectHtmlTag, defaultOnError, baseCompile as baseCompile$1 } from '@intlify/message-compiler';\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * istanbul-ignore-next\r\n */\nfunction initFeatureFlags() {\n  if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\n  }\n  if (typeof __INTLIFY_JIT_COMPILATION__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_JIT_COMPILATION__ = false;\n  }\n  if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\n    getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\n  }\n}\nconst pathStateMachine = [];\npathStateMachine[0 /* States.BEFORE_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[1 /* States.IN_PATH */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\n};\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\n};\npathStateMachine[3 /* States.IN_IDENT */] = {\n  [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\n  [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\n  [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\n};\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\n  [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 2 /* Actions.INC_SUB_PATH_DEPTH */],\n  [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\n};\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\n  [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\n};\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\n  [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\n  [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\n  [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\n};\n/**\r\n * Check if an expression is a literal value.\r\n */\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n/**\r\n * Strip quotes from a string\r\n */\nfunction stripQuotes(str) {\n  const a = str.charCodeAt(0);\n  const b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n/**\r\n * Determine the type of a character in a keypath.\r\n */\nfunction getPathCharType(ch) {\n  if (ch === undefined || ch === null) {\n    return \"o\" /* PathCharTypes.END_OF_FAIL */;\n  }\n  const code = ch.charCodeAt(0);\n  switch (code) {\n    case 0x5b: // [\n    case 0x5d: // ]\n    case 0x2e: // .\n    case 0x22: // \"\n    case 0x27:\n      // '\n      return ch;\n    case 0x5f: // _\n    case 0x24: // $\n    case 0x2d:\n      // -\n      return \"i\" /* PathCharTypes.IDENT */;\n    case 0x09: // Tab (HT)\n    case 0x0a: // Newline (LF)\n    case 0x0d: // Return (CR)\n    case 0xa0: // No-break space (NBSP)\n    case 0xfeff: // Byte Order Mark (BOM)\n    case 0x2028: // Line Separator (LS)\n    case 0x2029:\n      // Paragraph Separator (PS)\n      return \"w\" /* PathCharTypes.WORKSPACE */;\n  }\n  return \"i\" /* PathCharTypes.IDENT */;\n}\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\nfunction formatSubPath(path) {\n  const trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\n}\n/**\r\n * Parse a string path into an array of segments\r\n */\nfunction parse(path) {\n  const keys = [];\n  let index = -1;\n  let mode = 0 /* States.BEFORE_PATH */;\n  let subPathDepth = 0;\n  let c;\n  let key; // eslint-disable-line\n  let newChar;\n  let type;\n  let transition;\n  let action;\n  let typeMap;\n  const actions = [];\n  actions[0 /* Actions.APPEND */] = () => {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n  actions[1 /* Actions.PUSH */] = () => {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n  actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\n    actions[0 /* Actions.APPEND */]();\n    subPathDepth++;\n  };\n  actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = 4 /* States.IN_SUB_PATH */;\n      actions[0 /* Actions.APPEND */]();\n    } else {\n      subPathDepth = 0;\n      if (key === undefined) {\n        return false;\n      }\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[1 /* Actions.PUSH */]();\n      }\n    }\n  };\n  function maybeUnescapeQuote() {\n    const nextChar = path[index + 1];\n    if (mode === 5 /* States.IN_SINGLE_QUOTE */ && nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */ || mode === 6 /* States.IN_DOUBLE_QUOTE */ && nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */) {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[0 /* Actions.APPEND */]();\n      return true;\n    }\n  }\n  while (mode !== null) {\n    index++;\n    c = path[index];\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\n    // check parse error\n    if (transition === 8 /* States.ERROR */) {\n      return;\n    }\n    mode = transition[0];\n    if (transition[1] !== undefined) {\n      action = actions[transition[1]];\n      if (action) {\n        newChar = c;\n        if (action() === false) {\n          return;\n        }\n      }\n    }\n    // check parse finish\n    if (mode === 7 /* States.AFTER_PATH */) {\n      return keys;\n    }\n  }\n}\n// path token cache\nconst cache = new Map();\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveWithKeyValue(obj, path) {\n  return isObject(obj) ? obj[path] : null;\n}\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction resolveValue(obj, path) {\n  // check object\n  if (!isObject(obj)) {\n    return null;\n  }\n  // parse path\n  let hit = cache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      cache.set(path, hit);\n    }\n  }\n  // check hit\n  if (!hit) {\n    return null;\n  }\n  // resolve path value\n  const len = hit.length;\n  let last = obj;\n  let i = 0;\n  while (i < len) {\n    const val = last[hit[i]];\n    if (val === undefined) {\n      return null;\n    }\n    if (isFunction(last)) {\n      return null;\n    }\n    last = val;\n    i++;\n  }\n  return last;\n}\nconst DEFAULT_MODIFIER = str => str;\nconst DEFAULT_MESSAGE = ctx => ''; // eslint-disable-line\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\nconst DEFAULT_NORMALIZE = values => values.length === 0 ? '' : join(values);\nconst DEFAULT_INTERPOLATE = toDisplayString;\nfunction pluralDefault(choice, choicesLength) {\n  choice = Math.abs(choice);\n  if (choicesLength === 2) {\n    // prettier-ignore\n    return choice ? choice > 1 ? 1 : 0 : 1;\n  }\n  return choice ? Math.min(choice, 2) : 0;\n}\nfunction getPluralIndex(options) {\n  // prettier-ignore\n  const index = isNumber(options.pluralIndex) ? options.pluralIndex : -1;\n  // prettier-ignore\n  return options.named && (isNumber(options.named.count) || isNumber(options.named.n)) ? isNumber(options.named.count) ? options.named.count : isNumber(options.named.n) ? options.named.n : index : index;\n}\nfunction normalizeNamed(pluralIndex, props) {\n  if (!props.count) {\n    props.count = pluralIndex;\n  }\n  if (!props.n) {\n    props.n = pluralIndex;\n  }\n}\nfunction createMessageContext(options = {}) {\n  const locale = options.locale;\n  const pluralIndex = getPluralIndex(options);\n  const pluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? options.pluralRules[locale] : pluralDefault;\n  const orgPluralRule = isObject(options.pluralRules) && isString(locale) && isFunction(options.pluralRules[locale]) ? pluralDefault : undefined;\n  const plural = messages => {\n    return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\n  };\n  const _list = options.list || [];\n  const list = index => _list[index];\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const _named = options.named || {};\n  isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\n  const named = key => _named[key];\n  function message(key) {\n    // prettier-ignore\n    const msg = isFunction(options.messages) ? options.messages(key) : isObject(options.messages) ? options.messages[key] : false;\n    return !msg ? options.parent ? options.parent.message(key) // resolve from parent messages\n    : DEFAULT_MESSAGE : msg;\n  }\n  const _modifier = name => options.modifiers ? options.modifiers[name] : DEFAULT_MODIFIER;\n  const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize) ? options.processor.normalize : DEFAULT_NORMALIZE;\n  const interpolate = isPlainObject(options.processor) && isFunction(options.processor.interpolate) ? options.processor.interpolate : DEFAULT_INTERPOLATE;\n  const type = isPlainObject(options.processor) && isString(options.processor.type) ? options.processor.type : DEFAULT_MESSAGE_DATA_TYPE;\n  const linked = (key, ...args) => {\n    const [arg1, arg2] = args;\n    let type = 'text';\n    let modifier = '';\n    if (args.length === 1) {\n      if (isObject(arg1)) {\n        modifier = arg1.modifier || modifier;\n        type = arg1.type || type;\n      } else if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n    } else if (args.length === 2) {\n      if (isString(arg1)) {\n        modifier = arg1 || modifier;\n      }\n      if (isString(arg2)) {\n        type = arg2 || type;\n      }\n    }\n    const ret = message(key)(ctx);\n    const msg =\n    // The message in vnode resolved with linked are returned as an array by processor.nomalize\n    type === 'vnode' && isArray(ret) && modifier ? ret[0] : ret;\n    return modifier ? _modifier(modifier)(msg, type) : msg;\n  };\n  const ctx = {\n    [\"list\" /* HelperNameMap.LIST */]: list,\n    [\"named\" /* HelperNameMap.NAMED */]: named,\n    [\"plural\" /* HelperNameMap.PLURAL */]: plural,\n    [\"linked\" /* HelperNameMap.LINKED */]: linked,\n    [\"message\" /* HelperNameMap.MESSAGE */]: message,\n    [\"type\" /* HelperNameMap.TYPE */]: type,\n    [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\n    [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\n    [\"values\" /* HelperNameMap.VALUES */]: assign({}, _list, _named)\n  };\n  return ctx;\n}\nlet devtools = null;\nfunction setDevToolsHook(hook) {\n  devtools = hook;\n}\nfunction getDevToolsHook() {\n  return devtools;\n}\nfunction initI18nDevTools(i18n, version, meta) {\n  // TODO: queue if devtools is undefined\n  devtools && devtools.emit(\"i18n:init\" /* IntlifyDevToolsHooks.I18nInit */, {\n    timestamp: Date.now(),\n    i18n,\n    version,\n    meta\n  });\n}\nconst translateDevTools = /* #__PURE__*/createDevToolsHook(\"function:translate\" /* IntlifyDevToolsHooks.FunctionTranslate */);\nfunction createDevToolsHook(hook) {\n  return payloads => devtools && devtools.emit(hook, payloads);\n}\nconst code$1 = CompileWarnCodes.__EXTEND_POINT__;\nconst inc$1 = incrementer(code$1);\nconst CoreWarnCodes = {\n  NOT_FOUND_KEY: code$1,\n  // 2\n  FALLBACK_TO_TRANSLATE: inc$1(),\n  // 3\n  CANNOT_FORMAT_NUMBER: inc$1(),\n  // 4\n  FALLBACK_TO_NUMBER_FORMAT: inc$1(),\n  // 5\n  CANNOT_FORMAT_DATE: inc$1(),\n  // 6\n  FALLBACK_TO_DATE_FORMAT: inc$1(),\n  // 7\n  EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1(),\n  // 8\n  __EXTEND_POINT__: inc$1() // 9\n};\n/** @internal */\nconst warnMessages = {\n  [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\n  [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\n  [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\n  [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\n};\nfunction getWarnMessage(code, ...args) {\n  return format$1(warnMessages[code], ...args);\n}\nconst code = CompileErrorCodes.__EXTEND_POINT__;\nconst inc = incrementer(code);\nconst CoreErrorCodes = {\n  INVALID_ARGUMENT: code,\n  // 17\n  INVALID_DATE_ARGUMENT: inc(),\n  // 18\n  INVALID_ISO_DATE_ARGUMENT: inc(),\n  // 19\n  NOT_SUPPORT_NON_STRING_MESSAGE: inc(),\n  // 20\n  NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc(),\n  // 21\n  NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc(),\n  // 22\n  NOT_SUPPORT_LOCALE_TYPE: inc(),\n  // 23\n  __EXTEND_POINT__: inc() // 24\n};\nfunction createCoreError(code) {\n  return createCompileError(code, null, process.env.NODE_ENV !== 'production' ? {\n    messages: errorMessages\n  } : undefined);\n}\n/** @internal */\nconst errorMessages = {\n  [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\n  [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' + 'Make sure your Date represents a valid date.',\n  [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\n  [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\n  [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\n};\n\n/** @internal */\nfunction getLocale(context, options) {\n  return options.locale != null ? resolveLocale(options.locale) : resolveLocale(context.locale);\n}\nlet _resolveLocale;\n/** @internal */\nfunction resolveLocale(locale) {\n  if (isString(locale)) {\n    return locale;\n  } else {\n    if (isFunction(locale)) {\n      if (locale.resolvedOnce && _resolveLocale != null) {\n        return _resolveLocale;\n      } else if (locale.constructor.name === 'Function') {\n        const resolve = locale();\n        if (isPromise(resolve)) {\n          throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\n        }\n        return _resolveLocale = resolve;\n      } else {\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\n      }\n    } else {\n      throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\n    }\n  }\n}\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\n) {\n  // prettier-ignore\n  return [...new Set([start, ...(isArray(fallback) ? fallback : isObject(fallback) ? Object.keys(fallback) : isString(fallback) ? [fallback] : [start])])];\n}\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\n  const startLocale = isString(start) ? start : DEFAULT_LOCALE;\n  const context = ctx;\n  if (!context.__localeChainCache) {\n    context.__localeChainCache = new Map();\n  }\n  let chain = context.__localeChainCache.get(startLocale);\n  if (!chain) {\n    chain = [];\n    // first block defined by start\n    let block = [start];\n    // while any intervening block found\n    while (isArray(block)) {\n      block = appendBlockToChain(chain, block, fallback);\n    }\n    // prettier-ignore\n    // last block defined by default\n    const defaults = isArray(fallback) || !isPlainObject(fallback) ? fallback : fallback['default'] ? fallback['default'] : null;\n    // convert defaults to array\n    block = isString(defaults) ? [defaults] : defaults;\n    if (isArray(block)) {\n      appendBlockToChain(chain, block, false);\n    }\n    context.__localeChainCache.set(startLocale, chain);\n  }\n  return chain;\n}\nfunction appendBlockToChain(chain, block, blocks) {\n  let follow = true;\n  for (let i = 0; i < block.length && isBoolean(follow); i++) {\n    const locale = block[i];\n    if (isString(locale)) {\n      follow = appendLocaleToChain(chain, block[i], blocks);\n    }\n  }\n  return follow;\n}\nfunction appendLocaleToChain(chain, locale, blocks) {\n  let follow;\n  const tokens = locale.split('-');\n  do {\n    const target = tokens.join('-');\n    follow = appendItemToChain(chain, target, blocks);\n    tokens.splice(-1, 1);\n  } while (tokens.length && follow === true);\n  return follow;\n}\nfunction appendItemToChain(chain, target, blocks) {\n  let follow = false;\n  if (!chain.includes(target)) {\n    follow = true;\n    if (target) {\n      follow = target[target.length - 1] !== '!';\n      const locale = target.replace(/!/g, '');\n      chain.push(locale);\n      if ((isArray(blocks) || isPlainObject(blocks)) && blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        follow = blocks[locale];\n      }\n    }\n  }\n  return follow;\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\nconst VERSION = '9.13.1';\nconst NOT_REOSLVED = -1;\nconst DEFAULT_LOCALE = 'en-US';\nconst MISSING_RESOLVE_VALUE = '';\nconst capitalize = str => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\nfunction getDefaultLinkedModifiers() {\n  return {\n    upper: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toUpperCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toUpperCase() : val;\n    },\n    lower: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? val.toLowerCase() : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? val.children.toLowerCase() : val;\n    },\n    capitalize: (val, type) => {\n      // prettier-ignore\n      return type === 'text' && isString(val) ? capitalize(val) : type === 'vnode' && isObject(val) && '__v_isVNode' in val ? capitalize(val.children) : val;\n    }\n  };\n}\nlet _compiler;\nfunction registerMessageCompiler(compiler) {\n  _compiler = compiler;\n}\nlet _resolver;\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerMessageResolver(resolver) {\n  _resolver = resolver;\n}\nlet _fallbacker;\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\nfunction registerLocaleFallbacker(fallbacker) {\n  _fallbacker = fallbacker;\n}\n// Additional Meta for Intlify DevTools\nlet _additionalMeta = null;\n/* #__NO_SIDE_EFFECTS__ */\nconst setAdditionalMeta = meta => {\n  _additionalMeta = meta;\n};\n/* #__NO_SIDE_EFFECTS__ */\nconst getAdditionalMeta = () => _additionalMeta;\nlet _fallbackContext = null;\nconst setFallbackContext = context => {\n  _fallbackContext = context;\n};\nconst getFallbackContext = () => _fallbackContext;\n// ID for CoreContext\nlet _cid = 0;\nfunction createCoreContext(options = {}) {\n  // setup options\n  const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\n  const version = isString(options.version) ? options.version : VERSION;\n  const locale = isString(options.locale) || isFunction(options.locale) ? options.locale : DEFAULT_LOCALE;\n  const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\n  const fallbackLocale = isArray(options.fallbackLocale) || isPlainObject(options.fallbackLocale) || isString(options.fallbackLocale) || options.fallbackLocale === false ? options.fallbackLocale : _locale;\n  const messages = isPlainObject(options.messages) ? options.messages : {\n    [_locale]: {}\n  };\n  const datetimeFormats = isPlainObject(options.datetimeFormats) ? options.datetimeFormats : {\n    [_locale]: {}\n  };\n  const numberFormats = isPlainObject(options.numberFormats) ? options.numberFormats : {\n    [_locale]: {}\n  };\n  const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\n  const pluralRules = options.pluralRules || {};\n  const missing = isFunction(options.missing) ? options.missing : null;\n  const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn) ? options.missingWarn : true;\n  const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn) ? options.fallbackWarn : true;\n  const fallbackFormat = !!options.fallbackFormat;\n  const unresolving = !!options.unresolving;\n  const postTranslation = isFunction(options.postTranslation) ? options.postTranslation : null;\n  const processor = isPlainObject(options.processor) ? options.processor : null;\n  const warnHtmlMessage = isBoolean(options.warnHtmlMessage) ? options.warnHtmlMessage : true;\n  const escapeParameter = !!options.escapeParameter;\n  const messageCompiler = isFunction(options.messageCompiler) ? options.messageCompiler : _compiler;\n  if (process.env.NODE_ENV !== 'production' && !false && !false && isFunction(options.messageCompiler)) {\n    warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\n  }\n  const messageResolver = isFunction(options.messageResolver) ? options.messageResolver : _resolver || resolveWithKeyValue;\n  const localeFallbacker = isFunction(options.localeFallbacker) ? options.localeFallbacker : _fallbacker || fallbackWithSimple;\n  const fallbackContext = isObject(options.fallbackContext) ? options.fallbackContext : undefined;\n  // setup internal options\n  const internalOptions = options;\n  const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters) ? internalOptions.__datetimeFormatters : new Map();\n  const __numberFormatters = isObject(internalOptions.__numberFormatters) ? internalOptions.__numberFormatters : new Map();\n  const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\n  _cid++;\n  const context = {\n    version,\n    cid: _cid,\n    locale,\n    fallbackLocale,\n    messages,\n    modifiers,\n    pluralRules,\n    missing,\n    missingWarn,\n    fallbackWarn,\n    fallbackFormat,\n    unresolving,\n    postTranslation,\n    processor,\n    warnHtmlMessage,\n    escapeParameter,\n    messageCompiler,\n    messageResolver,\n    localeFallbacker,\n    fallbackContext,\n    onWarn,\n    __meta\n  };\n  {\n    context.datetimeFormats = datetimeFormats;\n    context.numberFormats = numberFormats;\n    context.__datetimeFormatters = __datetimeFormatters;\n    context.__numberFormatters = __numberFormatters;\n  }\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    context.__v_emitter = internalOptions.__v_emitter != null ? internalOptions.__v_emitter : undefined;\n  }\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    initI18nDevTools(context, version, __meta);\n  }\n  return context;\n}\n/** @internal */\nfunction isTranslateFallbackWarn(fallback, key) {\n  return fallback instanceof RegExp ? fallback.test(key) : fallback;\n}\n/** @internal */\nfunction isTranslateMissingWarn(missing, key) {\n  return missing instanceof RegExp ? missing.test(key) : missing;\n}\n/** @internal */\nfunction handleMissing(context, key, locale, missingWarn, type) {\n  const {\n    missing,\n    onWarn\n  } = context;\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production') {\n    const emitter = context.__v_emitter;\n    if (emitter) {\n      emitter.emit(\"missing\" /* VueDevToolsTimelineEvents.MISSING */, {\n        locale,\n        key,\n        type,\n        groupId: `${type}:${key}`\n      });\n    }\n  }\n  if (missing !== null) {\n    const ret = missing(context, locale, key, type);\n    return isString(ret) ? ret : key;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && isTranslateMissingWarn(missingWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, {\n        key,\n        locale\n      }));\n    }\n    return key;\n  }\n}\n/** @internal */\nfunction updateFallbackLocale(ctx, locale, fallback) {\n  const context = ctx;\n  context.__localeChainCache = new Map();\n  ctx.localeFallbacker(ctx, fallback, locale);\n}\n/** @internal */\nfunction isAlmostSameLocale(locale, compareLocale) {\n  if (locale === compareLocale) return false;\n  return locale.split('-')[0] === compareLocale.split('-')[0];\n}\n/** @internal */\nfunction isImplicitFallback(targetLocale, locales) {\n  const index = locales.indexOf(targetLocale);\n  if (index === -1) {\n    return false;\n  }\n  for (let i = index + 1; i < locales.length; i++) {\n    if (isAlmostSameLocale(targetLocale, locales[i])) {\n      return true;\n    }\n  }\n  return false;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any */\n\nfunction format(ast) {\n  const msg = ctx => formatParts(ctx, ast);\n  return msg;\n}\nfunction formatParts(ctx, ast) {\n  const body = ast.b || ast.body;\n  if ((body.t || body.type) === 1 /* NodeTypes.Plural */) {\n    const plural = body;\n    const cases = plural.c || plural.cases;\n    return ctx.plural(cases.reduce((messages, c) => [...messages, formatMessageParts(ctx, c)], []));\n  } else {\n    return formatMessageParts(ctx, body);\n  }\n}\nfunction formatMessageParts(ctx, node) {\n  const _static = node.s || node.static;\n  if (_static) {\n    return ctx.type === 'text' ? _static : ctx.normalize([_static]);\n  } else {\n    const messages = (node.i || node.items).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\n    return ctx.normalize(messages);\n  }\n}\nfunction formatMessagePart(ctx, node) {\n  const type = node.t || node.type;\n  switch (type) {\n    case 3 /* NodeTypes.Text */:\n      {\n        const text = node;\n        return text.v || text.value;\n      }\n    case 9 /* NodeTypes.Literal */:\n      {\n        const literal = node;\n        return literal.v || literal.value;\n      }\n    case 4 /* NodeTypes.Named */:\n      {\n        const named = node;\n        return ctx.interpolate(ctx.named(named.k || named.key));\n      }\n    case 5 /* NodeTypes.List */:\n      {\n        const list = node;\n        return ctx.interpolate(ctx.list(list.i != null ? list.i : list.index));\n      }\n    case 6 /* NodeTypes.Linked */:\n      {\n        const linked = node;\n        const modifier = linked.m || linked.modifier;\n        return ctx.linked(formatMessagePart(ctx, linked.k || linked.key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\n      }\n    case 7 /* NodeTypes.LinkedKey */:\n      {\n        const linkedKey = node;\n        return linkedKey.v || linkedKey.value;\n      }\n    case 8 /* NodeTypes.LinkedModifier */:\n      {\n        const linkedModifier = node;\n        return linkedModifier.v || linkedModifier.value;\n      }\n    default:\n      throw new Error(`unhandled node type on format message part: ${type}`);\n  }\n}\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\nfunction checkHtmlMessage(source, warnHtmlMessage) {\n  if (warnHtmlMessage && detectHtmlTag(source)) {\n    warn(format$1(WARN_MESSAGE, {\n      source\n    }));\n  }\n}\nconst defaultOnCacheKey = message => message;\nlet compileCache = Object.create(null);\nfunction onCompileWarn(_warn) {\n  if (_warn.code === CompileWarnCodes.USE_MODULO_SYNTAX) {\n    warn(`The use of named interpolation with modulo syntax is deprecated. ` + `It will be removed in v10.\\n` + `reference: https://vue-i18n.intlify.dev/guide/essentials/syntax#rails-i18n-format \\n` + `(message compiler warning message: ${_warn.message})`);\n  }\n}\nfunction clearCompileCache() {\n  compileCache = Object.create(null);\n}\nconst isMessageAST = val => isObject(val) && (val.t === 0 || val.type === 0) && ('b' in val || 'body' in val);\nfunction baseCompile(message, options = {}) {\n  // error detecting on compile\n  let detectError = false;\n  const onError = options.onError || defaultOnError;\n  options.onError = err => {\n    detectError = true;\n    onError(err);\n  };\n  // compile with mesasge-compiler\n  return {\n    ...baseCompile$1(message, options),\n    detectError\n  };\n}\n/* #__NO_SIDE_EFFECTS__ */\nconst compileToFunction = (message, context) => {\n  if (!isString(message)) {\n    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE);\n  }\n  // set onWarn\n  if (process.env.NODE_ENV !== 'production') {\n    context.onWarn = onCompileWarn;\n  }\n  {\n    // check HTML message\n    const warnHtmlMessage = isBoolean(context.warnHtmlMessage) ? context.warnHtmlMessage : true;\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(message, warnHtmlMessage);\n    // check caches\n    const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n    const cacheKey = onCacheKey(message);\n    const cached = compileCache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    // compile\n    const {\n      code,\n      detectError\n    } = baseCompile(message, context);\n    // evaluate function\n    const msg = new Function(`return ${code}`)();\n    // if occurred compile error, don't cache\n    return !detectError ? compileCache[cacheKey] = msg : msg;\n  }\n};\nfunction compile(message, context) {\n  // set onWarn\n  if (process.env.NODE_ENV !== 'production') {\n    context.onWarn = onCompileWarn;\n  }\n  if (__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__ && isString(message)) {\n    // check HTML message\n    const warnHtmlMessage = isBoolean(context.warnHtmlMessage) ? context.warnHtmlMessage : true;\n    process.env.NODE_ENV !== 'production' && checkHtmlMessage(message, warnHtmlMessage);\n    // check caches\n    const onCacheKey = context.onCacheKey || defaultOnCacheKey;\n    const cacheKey = onCacheKey(message);\n    const cached = compileCache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    // compile with JIT mode\n    const {\n      ast,\n      detectError\n    } = baseCompile(message, {\n      ...context,\n      location: process.env.NODE_ENV !== 'production',\n      jit: true\n    });\n    // compose message function from AST\n    const msg = format(ast);\n    // if occurred compile error, don't cache\n    return !detectError ? compileCache[cacheKey] = msg : msg;\n  } else {\n    if (process.env.NODE_ENV !== 'production' && !isMessageAST(message)) {\n      warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\n      return () => message;\n    }\n    // AST case (passed from bundler)\n    const cacheKey = message.cacheKey;\n    if (cacheKey) {\n      const cached = compileCache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      // compose message function from message (AST)\n      return compileCache[cacheKey] = format(message);\n    } else {\n      return format(message);\n    }\n  }\n}\nconst NOOP_MESSAGE_FUNCTION = () => '';\nconst isMessageFunction = val => isFunction(val);\n// implementation of `translate` function\nfunction translate(context, ...args) {\n  const {\n    fallbackFormat,\n    postTranslation,\n    unresolving,\n    messageCompiler,\n    fallbackLocale,\n    messages\n  } = context;\n  const [key, options] = parseTranslateArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const escapeParameter = isBoolean(options.escapeParameter) ? options.escapeParameter : context.escapeParameter;\n  const resolvedMessage = !!options.resolvedMessage;\n  // prettier-ignore\n  const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\n  ? !isBoolean(options.default) ? options.default : !messageCompiler ? () => key : key : fallbackFormat // default by `fallbackFormat` option\n  ? !messageCompiler ? () => key : key : '';\n  const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\n  const locale = getLocale(context, options);\n  // escape params\n  escapeParameter && escapeParams(options);\n  // resolve message format\n  // eslint-disable-next-line prefer-const\n  let [formatScope, targetLocale, message] = !resolvedMessage ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) : [key, locale, messages[locale] || {}];\n  // NOTE:\n  //  Fix to work around `ssrTransfrom` bug in Vite.\n  //  https://github.com/vitejs/vite/issues/4306\n  //  To get around this, use temporary variables.\n  //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\n  let format = formatScope;\n  // if you use default message, set it as message format!\n  let cacheBaseKey = key;\n  if (!resolvedMessage && !(isString(format) || isMessageAST(format) || isMessageFunction(format))) {\n    if (enableDefaultMsg) {\n      format = defaultMsgOrKey;\n      cacheBaseKey = format;\n    }\n  }\n  // checking message format and target locale\n  if (!resolvedMessage && (!(isString(format) || isMessageAST(format) || isMessageFunction(format)) || !isString(targetLocale))) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  // TODO: refactor\n  if (process.env.NODE_ENV !== 'production' && isString(format) && context.messageCompiler == null) {\n    warn(`The message format compilation is not supported in this build. ` + `Because message compiler isn't included. ` + `You need to pre-compilation all message format. ` + `So translate function return '${key}'.`);\n    return key;\n  }\n  // setup compile error detecting\n  let occurred = false;\n  const onError = () => {\n    occurred = true;\n  };\n  // compile message format\n  const msg = !isMessageFunction(format) ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) : format;\n  // if occurred compile error, return the message format\n  if (occurred) {\n    return format;\n  }\n  // evaluate message with context\n  const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\n  const msgContext = createMessageContext(ctxOptions);\n  const messaged = evaluateMessage(context, msg, msgContext);\n  // if use post translation option, proceed it with handler\n  const ret = postTranslation ? postTranslation(messaged, key) : messaged;\n  // NOTE: experimental !!\n  if (process.env.NODE_ENV !== 'production' || __INTLIFY_PROD_DEVTOOLS__) {\n    // prettier-ignore\n    const payloads = {\n      timestamp: Date.now(),\n      key: isString(key) ? key : isMessageFunction(format) ? format.key : '',\n      locale: targetLocale || (isMessageFunction(format) ? format.locale : ''),\n      format: isString(format) ? format : isMessageFunction(format) ? format.source : '',\n      message: ret\n    };\n    payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\n    translateDevTools(payloads);\n  }\n  return ret;\n}\nfunction escapeParams(options) {\n  if (isArray(options.list)) {\n    options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\n  } else if (isObject(options.named)) {\n    Object.keys(options.named).forEach(key => {\n      if (isString(options.named[key])) {\n        options.named[key] = escapeHtml(options.named[key]);\n      }\n    });\n  }\n}\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\n  const {\n    messages,\n    onWarn,\n    messageResolver: resolveValue,\n    localeFallbacker\n  } = context;\n  const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\n  let message = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'translate';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && !isAlmostSameLocale(locale, targetLocale) && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    message = messages[targetLocale] || {};\n    // for vue-devtools timeline event\n    let start = null;\n    let startTag;\n    let endTag;\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      start = window.performance.now();\n      startTag = 'intlify-message-resolve-start';\n      endTag = 'intlify-message-resolve-end';\n      mark && mark(startTag);\n    }\n    if ((format = resolveValue(message, key)) === null) {\n      // if null, resolve with object key path\n      format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && inBrowser) {\n      const end = window.performance.now();\n      const emitter = context.__v_emitter;\n      if (emitter && start && format) {\n        emitter.emit(\"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */, {\n          type: \"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */,\n          key,\n          message: format,\n          time: end - start,\n          groupId: `${type}:${key}`\n        });\n      }\n      if (startTag && endTag && mark && measure) {\n        mark(endTag);\n        measure('intlify message resolve', startTag, endTag);\n      }\n    }\n    if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\n      break;\n    }\n    if (!isImplicitFallback(targetLocale, locales)) {\n      const missingRet = handleMissing(context,\n      // eslint-disable-line @typescript-eslint/no-explicit-any\n      key, targetLocale, missingWarn, type);\n      if (missingRet !== key) {\n        format = missingRet;\n      }\n    }\n    from = to;\n  }\n  return [format, targetLocale, message];\n}\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\n  const {\n    messageCompiler,\n    warnHtmlMessage\n  } = context;\n  if (isMessageFunction(format)) {\n    const msg = format;\n    msg.locale = msg.locale || targetLocale;\n    msg.key = msg.key || key;\n    return msg;\n  }\n  if (messageCompiler == null) {\n    const msg = () => format;\n    msg.locale = targetLocale;\n    msg.key = key;\n    return msg;\n  }\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-compilation-start';\n    endTag = 'intlify-message-compilation-end';\n    mark && mark(startTag);\n  }\n  const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit(\"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */, {\n        type: \"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */,\n        message: format,\n        time: end - start,\n        groupId: `${'translate'}:${key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message compilation', startTag, endTag);\n    }\n  }\n  msg.locale = targetLocale;\n  msg.key = key;\n  msg.source = format;\n  return msg;\n}\nfunction evaluateMessage(context, msg, msgCtx) {\n  // for vue-devtools timeline event\n  let start = null;\n  let startTag;\n  let endTag;\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    start = window.performance.now();\n    startTag = 'intlify-message-evaluation-start';\n    endTag = 'intlify-message-evaluation-end';\n    mark && mark(startTag);\n  }\n  const messaged = msg(msgCtx);\n  // for vue-devtools timeline event\n  if (process.env.NODE_ENV !== 'production' && inBrowser) {\n    const end = window.performance.now();\n    const emitter = context.__v_emitter;\n    if (emitter && start) {\n      emitter.emit(\"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */, {\n        type: \"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */,\n        value: messaged,\n        time: end - start,\n        groupId: `${'translate'}:${msg.key}`\n      });\n    }\n    if (startTag && endTag && mark && measure) {\n      mark(endTag);\n      measure('intlify message evaluation', startTag, endTag);\n    }\n  }\n  return messaged;\n}\n/** @internal */\nfunction parseTranslateArgs(...args) {\n  const [arg1, arg2, arg3] = args;\n  const options = {};\n  if (!isString(arg1) && !isNumber(arg1) && !isMessageFunction(arg1) && !isMessageAST(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  // prettier-ignore\n  const key = isNumber(arg1) ? String(arg1) : isMessageFunction(arg1) ? arg1 : arg1;\n  if (isNumber(arg2)) {\n    options.plural = arg2;\n  } else if (isString(arg2)) {\n    options.default = arg2;\n  } else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\n    options.named = arg2;\n  } else if (isArray(arg2)) {\n    options.list = arg2;\n  }\n  if (isNumber(arg3)) {\n    options.plural = arg3;\n  } else if (isString(arg3)) {\n    options.default = arg3;\n  } else if (isPlainObject(arg3)) {\n    assign(options, arg3);\n  }\n  return [key, options];\n}\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\n  return {\n    locale,\n    key,\n    warnHtmlMessage,\n    onError: err => {\n      onError && onError(err);\n      if (process.env.NODE_ENV !== 'production') {\n        const _source = getSourceForCodeFrame(source);\n        const message = `Message compilation error: ${err.message}`;\n        const codeFrame = err.location && _source && generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\n        const emitter = context.__v_emitter;\n        if (emitter && _source) {\n          emitter.emit(\"compile-error\" /* VueDevToolsTimelineEvents.COMPILE_ERROR */, {\n            message: _source,\n            error: err.message,\n            start: err.location && err.location.start.offset,\n            end: err.location && err.location.end.offset,\n            groupId: `${'translate'}:${key}`\n          });\n        }\n        console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\n      } else {\n        throw err;\n      }\n    },\n    onCacheKey: source => generateFormatCacheKey(locale, key, source)\n  };\n}\nfunction getSourceForCodeFrame(source) {\n  if (isString(source)) {\n    return source;\n  } else {\n    if (source.loc && source.loc.source) {\n      return source.loc.source;\n    }\n  }\n}\nfunction getMessageContextOptions(context, locale, message, options) {\n  const {\n    modifiers,\n    pluralRules,\n    messageResolver: resolveValue,\n    fallbackLocale,\n    fallbackWarn,\n    missingWarn,\n    fallbackContext\n  } = context;\n  const resolveMessage = key => {\n    let val = resolveValue(message, key);\n    // fallback to root context\n    if (val == null && fallbackContext) {\n      const [,, message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\n      val = resolveValue(message, key);\n    }\n    if (isString(val) || isMessageAST(val)) {\n      let occurred = false;\n      const onError = () => {\n        occurred = true;\n      };\n      const msg = compileMessageFormat(context, key, locale, val, key, onError);\n      return !occurred ? msg : NOOP_MESSAGE_FUNCTION;\n    } else if (isMessageFunction(val)) {\n      return val;\n    } else {\n      // TODO: should be implemented warning message\n      return NOOP_MESSAGE_FUNCTION;\n    }\n  };\n  const ctxOptions = {\n    locale,\n    modifiers,\n    pluralRules,\n    messages: resolveMessage\n  };\n  if (context.processor) {\n    ctxOptions.processor = context.processor;\n  }\n  if (options.list) {\n    ctxOptions.list = options.list;\n  }\n  if (options.named) {\n    ctxOptions.named = options.named;\n  }\n  if (isNumber(options.plural)) {\n    ctxOptions.pluralIndex = options.plural;\n  }\n  return ctxOptions;\n}\nconst intlDefined = typeof Intl !== 'undefined';\nconst Availabilities = {\n  dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\n  numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\n};\n\n// implementation of `datetime` function\nfunction datetime(context, ...args) {\n  const {\n    datetimeFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __datetimeFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.dateTimeFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseDateTimeArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.DateTimeFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let datetimeFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'datetime format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    datetimeFormat = datetimeFormats[targetLocale] || {};\n    format = datetimeFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __datetimeFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\n    __datetimeFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst DATETIME_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'weekday', 'era', 'year', 'month', 'day', 'hour', 'minute', 'second', 'timeZoneName', 'formatMatcher', 'hour12', 'timeZone', 'dateStyle', 'timeStyle', 'calendar', 'dayPeriod', 'numberingSystem', 'hourCycle', 'fractionalSecondDigits'];\n/** @internal */\nfunction parseDateTimeArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  let value;\n  if (isString(arg1)) {\n    // Only allow ISO strings - other date formats are often supported,\n    // but may cause different results in different browsers.\n    const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\n    if (!matches) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n    // Some browsers can not parse the iso datetime separated by space,\n    // this is a compromise solution by replace the 'T'/' ' with 'T'\n    const dateTime = matches[3] ? matches[3].trim().startsWith('T') ? `${matches[1].trim()}${matches[3].trim()}` : `${matches[1].trim()}T${matches[3].trim()}` : matches[1].trim();\n    value = new Date(dateTime);\n    try {\n      // This will fail if the date is not valid\n      value.toISOString();\n    } catch (e) {\n      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\n    }\n  } else if (isDate(arg1)) {\n    if (isNaN(arg1.getTime())) {\n      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\n    }\n    value = arg1;\n  } else if (isNumber(arg1)) {\n    value = arg1;\n  } else {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearDateTimeFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__datetimeFormatters.has(id)) {\n      continue;\n    }\n    context.__datetimeFormatters.delete(id);\n  }\n}\n\n// implementation of `number` function\nfunction number(context, ...args) {\n  const {\n    numberFormats,\n    unresolving,\n    fallbackLocale,\n    onWarn,\n    localeFallbacker\n  } = context;\n  const {\n    __numberFormatters\n  } = context;\n  if (process.env.NODE_ENV !== 'production' && !Availabilities.numberFormat) {\n    onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\n    return MISSING_RESOLVE_VALUE;\n  }\n  const [key, value, options, overrides] = parseNumberArgs(...args);\n  const missingWarn = isBoolean(options.missingWarn) ? options.missingWarn : context.missingWarn;\n  const fallbackWarn = isBoolean(options.fallbackWarn) ? options.fallbackWarn : context.fallbackWarn;\n  const part = !!options.part;\n  const locale = getLocale(context, options);\n  const locales = localeFallbacker(context,\n  // eslint-disable-line @typescript-eslint/no-explicit-any\n  fallbackLocale, locale);\n  if (!isString(key) || key === '') {\n    return new Intl.NumberFormat(locale, overrides).format(value);\n  }\n  // resolve format\n  let numberFormat = {};\n  let targetLocale;\n  let format = null;\n  let from = locale;\n  let to = null;\n  const type = 'number format';\n  for (let i = 0; i < locales.length; i++) {\n    targetLocale = to = locales[i];\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale && isTranslateFallbackWarn(fallbackWarn, key)) {\n      onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\n        key,\n        target: targetLocale\n      }));\n    }\n    // for vue-devtools timeline event\n    if (process.env.NODE_ENV !== 'production' && locale !== targetLocale) {\n      const emitter = context.__v_emitter;\n      if (emitter) {\n        emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\n          type,\n          key,\n          from,\n          to,\n          groupId: `${type}:${key}`\n        });\n      }\n    }\n    numberFormat = numberFormats[targetLocale] || {};\n    format = numberFormat[key];\n    if (isPlainObject(format)) break;\n    handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\n    from = to;\n  }\n  // checking format and target locale\n  if (!isPlainObject(format) || !isString(targetLocale)) {\n    return unresolving ? NOT_REOSLVED : key;\n  }\n  let id = `${targetLocale}__${key}`;\n  if (!isEmptyObject(overrides)) {\n    id = `${id}__${JSON.stringify(overrides)}`;\n  }\n  let formatter = __numberFormatters.get(id);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\n    __numberFormatters.set(id, formatter);\n  }\n  return !part ? formatter.format(value) : formatter.formatToParts(value);\n}\n/** @internal */\nconst NUMBER_FORMAT_OPTIONS_KEYS = ['localeMatcher', 'style', 'currency', 'currencyDisplay', 'currencySign', 'useGrouping', 'minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits', 'compactDisplay', 'notation', 'signDisplay', 'unit', 'unitDisplay', 'roundingMode', 'roundingPriority', 'roundingIncrement', 'trailingZeroDisplay'];\n/** @internal */\nfunction parseNumberArgs(...args) {\n  const [arg1, arg2, arg3, arg4] = args;\n  const options = {};\n  let overrides = {};\n  if (!isNumber(arg1)) {\n    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\n  }\n  const value = arg1;\n  if (isString(arg2)) {\n    options.key = arg2;\n  } else if (isPlainObject(arg2)) {\n    Object.keys(arg2).forEach(key => {\n      if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\n        overrides[key] = arg2[key];\n      } else {\n        options[key] = arg2[key];\n      }\n    });\n  }\n  if (isString(arg3)) {\n    options.locale = arg3;\n  } else if (isPlainObject(arg3)) {\n    overrides = arg3;\n  }\n  if (isPlainObject(arg4)) {\n    overrides = arg4;\n  }\n  return [options.key || '', value, options, overrides];\n}\n/** @internal */\nfunction clearNumberFormat(ctx, locale, format) {\n  const context = ctx;\n  for (const key in format) {\n    const id = `${locale}__${key}`;\n    if (!context.__numberFormatters.has(id)) {\n      continue;\n    }\n    context.__numberFormatters.delete(id);\n  }\n}\n{\n  initFeatureFlags();\n}\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };","map":{"version":3,"names":["getGlobalThis","isObject","isFunction","isString","isNumber","isPlainObject","assign","join","toDisplayString","isArray","incrementer","format","format$1","isPromise","isBoolean","warn","isRegExp","warnOnce","escapeHtml","inBrowser","mark","measure","isEmptyObject","generateCodeFrame","generateFormatCacheKey","isDate","CompileWarnCodes","CompileErrorCodes","createCompileError","detectHtmlTag","defaultOnError","baseCompile","baseCompile$1","initFeatureFlags","__INTLIFY_PROD_DEVTOOLS__","__INTLIFY_JIT_COMPILATION__","__INTLIFY_DROP_MESSAGE_COMPILER__","pathStateMachine","literalValueRE","isLiteral","exp","test","stripQuotes","str","a","charCodeAt","b","length","slice","getPathCharType","ch","undefined","code","formatSubPath","path","trimmed","trim","charAt","isNaN","parseInt","parse","keys","index","mode","subPathDepth","c","key","newChar","type","transition","action","typeMap","actions","push","maybeUnescapeQuote","nextChar","cache","Map","resolveWithKeyValue","obj","resolveValue","hit","get","set","len","last","i","val","DEFAULT_MODIFIER","DEFAULT_MESSAGE","ctx","DEFAULT_MESSAGE_DATA_TYPE","DEFAULT_NORMALIZE","values","DEFAULT_INTERPOLATE","pluralDefault","choice","choicesLength","Math","abs","min","getPluralIndex","options","pluralIndex","named","count","n","normalizeNamed","props","createMessageContext","locale","pluralRule","pluralRules","orgPluralRule","plural","messages","_list","list","_named","message","msg","parent","_modifier","name","modifiers","normalize","processor","interpolate","linked","args","arg1","arg2","modifier","ret","devtools","setDevToolsHook","hook","getDevToolsHook","initI18nDevTools","i18n","version","meta","emit","timestamp","Date","now","translateDevTools","createDevToolsHook","payloads","code$1","__EXTEND_POINT__","inc$1","CoreWarnCodes","NOT_FOUND_KEY","FALLBACK_TO_TRANSLATE","CANNOT_FORMAT_NUMBER","FALLBACK_TO_NUMBER_FORMAT","CANNOT_FORMAT_DATE","FALLBACK_TO_DATE_FORMAT","EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER","warnMessages","getWarnMessage","inc","CoreErrorCodes","INVALID_ARGUMENT","INVALID_DATE_ARGUMENT","INVALID_ISO_DATE_ARGUMENT","NOT_SUPPORT_NON_STRING_MESSAGE","NOT_SUPPORT_LOCALE_PROMISE_VALUE","NOT_SUPPORT_LOCALE_ASYNC_FUNCTION","NOT_SUPPORT_LOCALE_TYPE","createCoreError","process","env","NODE_ENV","errorMessages","getLocale","context","resolveLocale","_resolveLocale","resolvedOnce","constructor","resolve","fallbackWithSimple","fallback","start","Set","Object","fallbackWithLocaleChain","startLocale","DEFAULT_LOCALE","__localeChainCache","chain","block","appendBlockToChain","defaults","blocks","follow","appendLocaleToChain","tokens","split","target","appendItemToChain","splice","includes","replace","VERSION","NOT_REOSLVED","MISSING_RESOLVE_VALUE","capitalize","toLocaleUpperCase","substr","getDefaultLinkedModifiers","upper","toUpperCase","children","lower","toLowerCase","_compiler","registerMessageCompiler","compiler","_resolver","registerMessageResolver","resolver","_fallbacker","registerLocaleFallbacker","fallbacker","_additionalMeta","setAdditionalMeta","getAdditionalMeta","_fallbackContext","setFallbackContext","getFallbackContext","_cid","createCoreContext","onWarn","_locale","fallbackLocale","datetimeFormats","numberFormats","missing","missingWarn","fallbackWarn","fallbackFormat","unresolving","postTranslation","warnHtmlMessage","escapeParameter","messageCompiler","messageResolver","localeFallbacker","fallbackContext","internalOptions","__datetimeFormatters","__numberFormatters","__meta","cid","__v_emitter","isTranslateFallbackWarn","RegExp","isTranslateMissingWarn","handleMissing","emitter","groupId","updateFallbackLocale","isAlmostSameLocale","compareLocale","isImplicitFallback","targetLocale","locales","indexOf","ast","formatParts","body","t","cases","reduce","formatMessageParts","node","_static","s","static","items","acm","formatMessagePart","text","v","value","literal","k","m","linkedKey","linkedModifier","Error","WARN_MESSAGE","checkHtmlMessage","source","defaultOnCacheKey","compileCache","create","onCompileWarn","_warn","USE_MODULO_SYNTAX","clearCompileCache","isMessageAST","detectError","onError","err","compileToFunction","onCacheKey","cacheKey","cached","Function","compile","location","jit","NOOP_MESSAGE_FUNCTION","isMessageFunction","translate","parseTranslateArgs","resolvedMessage","defaultMsgOrKey","default","enableDefaultMsg","escapeParams","formatScope","resolveMessageFormat","cacheBaseKey","occurred","compileMessageFormat","ctxOptions","getMessageContextOptions","msgContext","messaged","evaluateMessage","map","item","forEach","from","to","startTag","endTag","window","performance","end","time","missingRet","getCompileContext","msgCtx","arg3","String","_source","getSourceForCodeFrame","codeFrame","offset","error","console","loc","resolveMessage","intlDefined","Intl","Availabilities","dateTimeFormat","DateTimeFormat","numberFormat","NumberFormat","datetime","overrides","parseDateTimeArgs","part","datetimeFormat","id","JSON","stringify","formatter","formatToParts","DATETIME_FORMAT_OPTIONS_KEYS","arg4","matches","match","dateTime","startsWith","toISOString","e","getTime","clearDateTimeFormat","has","delete","number","parseNumberArgs","NUMBER_FORMAT_OPTIONS_KEYS","clearNumberFormat"],"sources":["C:/Users/DoWhyMeKeyTo/Desktop/vd/vd-projekat/projekat/node_modules/@intlify/core-base/dist/core-base.mjs"],"sourcesContent":["/*!\r\n  * core-base v9.13.1\r\n  * (c) 2024 kazuya kawaguchi\r\n  * Released under the MIT License.\r\n  */\r\nimport { getGlobalThis, isObject, isFunction, isString, isNumber, isPlainObject, assign, join, toDisplayString, isArray, incrementer, format as format$1, isPromise, isBoolean, warn, isRegExp, warnOnce, escapeHtml, inBrowser, mark, measure, isEmptyObject, generateCodeFrame, generateFormatCacheKey, isDate } from '@intlify/shared';\r\nimport { CompileWarnCodes, CompileErrorCodes, createCompileError, detectHtmlTag, defaultOnError, baseCompile as baseCompile$1 } from '@intlify/message-compiler';\r\nexport { CompileErrorCodes, createCompileError } from '@intlify/message-compiler';\r\n\r\n/**\r\n * This is only called in esm-bundler builds.\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    if (typeof __INTLIFY_PROD_DEVTOOLS__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if (typeof __INTLIFY_JIT_COMPILATION__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_JIT_COMPILATION__ = false;\r\n    }\r\n    if (typeof __INTLIFY_DROP_MESSAGE_COMPILER__ !== 'boolean') {\r\n        getGlobalThis().__INTLIFY_DROP_MESSAGE_COMPILER__ = false;\r\n    }\r\n}\r\n\r\nconst pathStateMachine =  [];\r\npathStateMachine[0 /* States.BEFORE_PATH */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [0 /* States.BEFORE_PATH */],\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\r\n};\r\npathStateMachine[1 /* States.IN_PATH */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */],\r\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */]\r\n};\r\npathStateMachine[2 /* States.BEFORE_IDENT */] = {\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [2 /* States.BEFORE_IDENT */],\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[3 /* States.IN_IDENT */] = {\r\n    [\"i\" /* PathCharTypes.IDENT */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"0\" /* PathCharTypes.ZERO */]: [3 /* States.IN_IDENT */, 0 /* Actions.APPEND */],\r\n    [\"w\" /* PathCharTypes.WORKSPACE */]: [1 /* States.IN_PATH */, 1 /* Actions.PUSH */],\r\n    [\".\" /* PathCharTypes.DOT */]: [2 /* States.BEFORE_IDENT */, 1 /* Actions.PUSH */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [4 /* States.IN_SUB_PATH */, 1 /* Actions.PUSH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: [7 /* States.AFTER_PATH */, 1 /* Actions.PUSH */]\r\n};\r\npathStateMachine[4 /* States.IN_SUB_PATH */] = {\r\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */],\r\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */],\r\n    [\"[\" /* PathCharTypes.LEFT_BRACKET */]: [\r\n        4 /* States.IN_SUB_PATH */,\r\n        2 /* Actions.INC_SUB_PATH_DEPTH */\r\n    ],\r\n    [\"]\" /* PathCharTypes.RIGHT_BRACKET */]: [1 /* States.IN_PATH */, 3 /* Actions.PUSH_SUB_PATH */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[5 /* States.IN_SINGLE_QUOTE */] = {\r\n    [\"'\" /* PathCharTypes.SINGLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [5 /* States.IN_SINGLE_QUOTE */, 0 /* Actions.APPEND */]\r\n};\r\npathStateMachine[6 /* States.IN_DOUBLE_QUOTE */] = {\r\n    [\"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */]: [4 /* States.IN_SUB_PATH */, 0 /* Actions.APPEND */],\r\n    [\"o\" /* PathCharTypes.END_OF_FAIL */]: 8 /* States.ERROR */,\r\n    [\"l\" /* PathCharTypes.ELSE */]: [6 /* States.IN_DOUBLE_QUOTE */, 0 /* Actions.APPEND */]\r\n};\r\n/**\r\n * Check if an expression is a literal value.\r\n */\r\nconst literalValueRE = /^\\s?(?:true|false|-?[\\d.]+|'[^']*'|\"[^\"]*\")\\s?$/;\r\nfunction isLiteral(exp) {\r\n    return literalValueRE.test(exp);\r\n}\r\n/**\r\n * Strip quotes from a string\r\n */\r\nfunction stripQuotes(str) {\r\n    const a = str.charCodeAt(0);\r\n    const b = str.charCodeAt(str.length - 1);\r\n    return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\r\n}\r\n/**\r\n * Determine the type of a character in a keypath.\r\n */\r\nfunction getPathCharType(ch) {\r\n    if (ch === undefined || ch === null) {\r\n        return \"o\" /* PathCharTypes.END_OF_FAIL */;\r\n    }\r\n    const code = ch.charCodeAt(0);\r\n    switch (code) {\r\n        case 0x5b: // [\r\n        case 0x5d: // ]\r\n        case 0x2e: // .\r\n        case 0x22: // \"\r\n        case 0x27: // '\r\n            return ch;\r\n        case 0x5f: // _\r\n        case 0x24: // $\r\n        case 0x2d: // -\r\n            return \"i\" /* PathCharTypes.IDENT */;\r\n        case 0x09: // Tab (HT)\r\n        case 0x0a: // Newline (LF)\r\n        case 0x0d: // Return (CR)\r\n        case 0xa0: // No-break space (NBSP)\r\n        case 0xfeff: // Byte Order Mark (BOM)\r\n        case 0x2028: // Line Separator (LS)\r\n        case 0x2029: // Paragraph Separator (PS)\r\n            return \"w\" /* PathCharTypes.WORKSPACE */;\r\n    }\r\n    return \"i\" /* PathCharTypes.IDENT */;\r\n}\r\n/**\r\n * Format a subPath, return its plain form if it is\r\n * a literal string or number. Otherwise prepend the\r\n * dynamic indicator (*).\r\n */\r\nfunction formatSubPath(path) {\r\n    const trimmed = path.trim();\r\n    // invalid leading 0\r\n    if (path.charAt(0) === '0' && isNaN(parseInt(path))) {\r\n        return false;\r\n    }\r\n    return isLiteral(trimmed)\r\n        ? stripQuotes(trimmed)\r\n        : \"*\" /* PathCharTypes.ASTARISK */ + trimmed;\r\n}\r\n/**\r\n * Parse a string path into an array of segments\r\n */\r\nfunction parse(path) {\r\n    const keys = [];\r\n    let index = -1;\r\n    let mode = 0 /* States.BEFORE_PATH */;\r\n    let subPathDepth = 0;\r\n    let c;\r\n    let key; // eslint-disable-line\r\n    let newChar;\r\n    let type;\r\n    let transition;\r\n    let action;\r\n    let typeMap;\r\n    const actions = [];\r\n    actions[0 /* Actions.APPEND */] = () => {\r\n        if (key === undefined) {\r\n            key = newChar;\r\n        }\r\n        else {\r\n            key += newChar;\r\n        }\r\n    };\r\n    actions[1 /* Actions.PUSH */] = () => {\r\n        if (key !== undefined) {\r\n            keys.push(key);\r\n            key = undefined;\r\n        }\r\n    };\r\n    actions[2 /* Actions.INC_SUB_PATH_DEPTH */] = () => {\r\n        actions[0 /* Actions.APPEND */]();\r\n        subPathDepth++;\r\n    };\r\n    actions[3 /* Actions.PUSH_SUB_PATH */] = () => {\r\n        if (subPathDepth > 0) {\r\n            subPathDepth--;\r\n            mode = 4 /* States.IN_SUB_PATH */;\r\n            actions[0 /* Actions.APPEND */]();\r\n        }\r\n        else {\r\n            subPathDepth = 0;\r\n            if (key === undefined) {\r\n                return false;\r\n            }\r\n            key = formatSubPath(key);\r\n            if (key === false) {\r\n                return false;\r\n            }\r\n            else {\r\n                actions[1 /* Actions.PUSH */]();\r\n            }\r\n        }\r\n    };\r\n    function maybeUnescapeQuote() {\r\n        const nextChar = path[index + 1];\r\n        if ((mode === 5 /* States.IN_SINGLE_QUOTE */ &&\r\n            nextChar === \"'\" /* PathCharTypes.SINGLE_QUOTE */) ||\r\n            (mode === 6 /* States.IN_DOUBLE_QUOTE */ &&\r\n                nextChar === \"\\\"\" /* PathCharTypes.DOUBLE_QUOTE */)) {\r\n            index++;\r\n            newChar = '\\\\' + nextChar;\r\n            actions[0 /* Actions.APPEND */]();\r\n            return true;\r\n        }\r\n    }\r\n    while (mode !== null) {\r\n        index++;\r\n        c = path[index];\r\n        if (c === '\\\\' && maybeUnescapeQuote()) {\r\n            continue;\r\n        }\r\n        type = getPathCharType(c);\r\n        typeMap = pathStateMachine[mode];\r\n        transition = typeMap[type] || typeMap[\"l\" /* PathCharTypes.ELSE */] || 8 /* States.ERROR */;\r\n        // check parse error\r\n        if (transition === 8 /* States.ERROR */) {\r\n            return;\r\n        }\r\n        mode = transition[0];\r\n        if (transition[1] !== undefined) {\r\n            action = actions[transition[1]];\r\n            if (action) {\r\n                newChar = c;\r\n                if (action() === false) {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        // check parse finish\r\n        if (mode === 7 /* States.AFTER_PATH */) {\r\n            return keys;\r\n        }\r\n    }\r\n}\r\n// path token cache\r\nconst cache = new Map();\r\n/**\r\n * key-value message resolver\r\n *\r\n * @remarks\r\n * Resolves messages with the key-value structure. Note that messages with a hierarchical structure such as objects cannot be resolved\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveWithKeyValue(obj, path) {\r\n    return isObject(obj) ? obj[path] : null;\r\n}\r\n/**\r\n * message resolver\r\n *\r\n * @remarks\r\n * Resolves messages. messages with a hierarchical structure such as objects can be resolved. This resolver is used in VueI18n as default.\r\n *\r\n * @param obj - A target object to be resolved with path\r\n * @param path - A {@link Path | path} to resolve the value of message\r\n *\r\n * @returns A resolved {@link PathValue | path value}\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction resolveValue(obj, path) {\r\n    // check object\r\n    if (!isObject(obj)) {\r\n        return null;\r\n    }\r\n    // parse path\r\n    let hit = cache.get(path);\r\n    if (!hit) {\r\n        hit = parse(path);\r\n        if (hit) {\r\n            cache.set(path, hit);\r\n        }\r\n    }\r\n    // check hit\r\n    if (!hit) {\r\n        return null;\r\n    }\r\n    // resolve path value\r\n    const len = hit.length;\r\n    let last = obj;\r\n    let i = 0;\r\n    while (i < len) {\r\n        const val = last[hit[i]];\r\n        if (val === undefined) {\r\n            return null;\r\n        }\r\n        if (isFunction(last)) {\r\n            return null;\r\n        }\r\n        last = val;\r\n        i++;\r\n    }\r\n    return last;\r\n}\r\n\r\nconst DEFAULT_MODIFIER = (str) => str;\r\nconst DEFAULT_MESSAGE = (ctx) => ''; // eslint-disable-line\r\nconst DEFAULT_MESSAGE_DATA_TYPE = 'text';\r\nconst DEFAULT_NORMALIZE = (values) => values.length === 0 ? '' : join(values);\r\nconst DEFAULT_INTERPOLATE = toDisplayString;\r\nfunction pluralDefault(choice, choicesLength) {\r\n    choice = Math.abs(choice);\r\n    if (choicesLength === 2) {\r\n        // prettier-ignore\r\n        return choice\r\n            ? choice > 1\r\n                ? 1\r\n                : 0\r\n            : 1;\r\n    }\r\n    return choice ? Math.min(choice, 2) : 0;\r\n}\r\nfunction getPluralIndex(options) {\r\n    // prettier-ignore\r\n    const index = isNumber(options.pluralIndex)\r\n        ? options.pluralIndex\r\n        : -1;\r\n    // prettier-ignore\r\n    return options.named && (isNumber(options.named.count) || isNumber(options.named.n))\r\n        ? isNumber(options.named.count)\r\n            ? options.named.count\r\n            : isNumber(options.named.n)\r\n                ? options.named.n\r\n                : index\r\n        : index;\r\n}\r\nfunction normalizeNamed(pluralIndex, props) {\r\n    if (!props.count) {\r\n        props.count = pluralIndex;\r\n    }\r\n    if (!props.n) {\r\n        props.n = pluralIndex;\r\n    }\r\n}\r\nfunction createMessageContext(options = {}) {\r\n    const locale = options.locale;\r\n    const pluralIndex = getPluralIndex(options);\r\n    const pluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? options.pluralRules[locale]\r\n        : pluralDefault;\r\n    const orgPluralRule = isObject(options.pluralRules) &&\r\n        isString(locale) &&\r\n        isFunction(options.pluralRules[locale])\r\n        ? pluralDefault\r\n        : undefined;\r\n    const plural = (messages) => {\r\n        return messages[pluralRule(pluralIndex, messages.length, orgPluralRule)];\r\n    };\r\n    const _list = options.list || [];\r\n    const list = (index) => _list[index];\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const _named = options.named || {};\r\n    isNumber(options.pluralIndex) && normalizeNamed(pluralIndex, _named);\r\n    const named = (key) => _named[key];\r\n    function message(key) {\r\n        // prettier-ignore\r\n        const msg = isFunction(options.messages)\r\n            ? options.messages(key)\r\n            : isObject(options.messages)\r\n                ? options.messages[key]\r\n                : false;\r\n        return !msg\r\n            ? options.parent\r\n                ? options.parent.message(key) // resolve from parent messages\r\n                : DEFAULT_MESSAGE\r\n            : msg;\r\n    }\r\n    const _modifier = (name) => options.modifiers\r\n        ? options.modifiers[name]\r\n        : DEFAULT_MODIFIER;\r\n    const normalize = isPlainObject(options.processor) && isFunction(options.processor.normalize)\r\n        ? options.processor.normalize\r\n        : DEFAULT_NORMALIZE;\r\n    const interpolate = isPlainObject(options.processor) &&\r\n        isFunction(options.processor.interpolate)\r\n        ? options.processor.interpolate\r\n        : DEFAULT_INTERPOLATE;\r\n    const type = isPlainObject(options.processor) && isString(options.processor.type)\r\n        ? options.processor.type\r\n        : DEFAULT_MESSAGE_DATA_TYPE;\r\n    const linked = (key, ...args) => {\r\n        const [arg1, arg2] = args;\r\n        let type = 'text';\r\n        let modifier = '';\r\n        if (args.length === 1) {\r\n            if (isObject(arg1)) {\r\n                modifier = arg1.modifier || modifier;\r\n                type = arg1.type || type;\r\n            }\r\n            else if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n        }\r\n        else if (args.length === 2) {\r\n            if (isString(arg1)) {\r\n                modifier = arg1 || modifier;\r\n            }\r\n            if (isString(arg2)) {\r\n                type = arg2 || type;\r\n            }\r\n        }\r\n        const ret = message(key)(ctx);\r\n        const msg = \r\n        // The message in vnode resolved with linked are returned as an array by processor.nomalize\r\n        type === 'vnode' && isArray(ret) && modifier\r\n            ? ret[0]\r\n            : ret;\r\n        return modifier ? _modifier(modifier)(msg, type) : msg;\r\n    };\r\n    const ctx = {\r\n        [\"list\" /* HelperNameMap.LIST */]: list,\r\n        [\"named\" /* HelperNameMap.NAMED */]: named,\r\n        [\"plural\" /* HelperNameMap.PLURAL */]: plural,\r\n        [\"linked\" /* HelperNameMap.LINKED */]: linked,\r\n        [\"message\" /* HelperNameMap.MESSAGE */]: message,\r\n        [\"type\" /* HelperNameMap.TYPE */]: type,\r\n        [\"interpolate\" /* HelperNameMap.INTERPOLATE */]: interpolate,\r\n        [\"normalize\" /* HelperNameMap.NORMALIZE */]: normalize,\r\n        [\"values\" /* HelperNameMap.VALUES */]: assign({}, _list, _named)\r\n    };\r\n    return ctx;\r\n}\r\n\r\nlet devtools = null;\r\nfunction setDevToolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction getDevToolsHook() {\r\n    return devtools;\r\n}\r\nfunction initI18nDevTools(i18n, version, meta) {\r\n    // TODO: queue if devtools is undefined\r\n    devtools &&\r\n        devtools.emit(\"i18n:init\" /* IntlifyDevToolsHooks.I18nInit */, {\r\n            timestamp: Date.now(),\r\n            i18n,\r\n            version,\r\n            meta\r\n        });\r\n}\r\nconst translateDevTools = /* #__PURE__*/ createDevToolsHook(\"function:translate\" /* IntlifyDevToolsHooks.FunctionTranslate */);\r\nfunction createDevToolsHook(hook) {\r\n    return (payloads) => devtools && devtools.emit(hook, payloads);\r\n}\r\n\r\nconst code$1 = CompileWarnCodes.__EXTEND_POINT__;\r\nconst inc$1 = incrementer(code$1);\r\nconst CoreWarnCodes = {\r\n    NOT_FOUND_KEY: code$1, // 2\r\n    FALLBACK_TO_TRANSLATE: inc$1(), // 3\r\n    CANNOT_FORMAT_NUMBER: inc$1(), // 4\r\n    FALLBACK_TO_NUMBER_FORMAT: inc$1(), // 5\r\n    CANNOT_FORMAT_DATE: inc$1(), // 6\r\n    FALLBACK_TO_DATE_FORMAT: inc$1(), // 7\r\n    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1(), // 8\r\n    __EXTEND_POINT__: inc$1() // 9\r\n};\r\n/** @internal */\r\nconst warnMessages = {\r\n    [CoreWarnCodes.NOT_FOUND_KEY]: `Not found '{key}' key in '{locale}' locale messages.`,\r\n    [CoreWarnCodes.FALLBACK_TO_TRANSLATE]: `Fall back to translate '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_NUMBER]: `Cannot format a number value due to not supported Intl.NumberFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT]: `Fall back to number format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.CANNOT_FORMAT_DATE]: `Cannot format a date value due to not supported Intl.DateTimeFormat.`,\r\n    [CoreWarnCodes.FALLBACK_TO_DATE_FORMAT]: `Fall back to datetime format '{key}' key with '{target}' locale.`,\r\n    [CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER]: `This project is using Custom Message Compiler, which is an experimental feature. It may receive breaking changes or be removed in the future.`\r\n};\r\nfunction getWarnMessage(code, ...args) {\r\n    return format$1(warnMessages[code], ...args);\r\n}\r\n\r\nconst code = CompileErrorCodes.__EXTEND_POINT__;\r\nconst inc = incrementer(code);\r\nconst CoreErrorCodes = {\r\n    INVALID_ARGUMENT: code, // 17\r\n    INVALID_DATE_ARGUMENT: inc(), // 18\r\n    INVALID_ISO_DATE_ARGUMENT: inc(), // 19\r\n    NOT_SUPPORT_NON_STRING_MESSAGE: inc(), // 20\r\n    NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc(), // 21\r\n    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc(), // 22\r\n    NOT_SUPPORT_LOCALE_TYPE: inc(), // 23\r\n    __EXTEND_POINT__: inc() // 24\r\n};\r\nfunction createCoreError(code) {\r\n    return createCompileError(code, null, (process.env.NODE_ENV !== 'production') ? { messages: errorMessages } : undefined);\r\n}\r\n/** @internal */\r\nconst errorMessages = {\r\n    [CoreErrorCodes.INVALID_ARGUMENT]: 'Invalid arguments',\r\n    [CoreErrorCodes.INVALID_DATE_ARGUMENT]: 'The date provided is an invalid Date object.' +\r\n        'Make sure your Date represents a valid date.',\r\n    [CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT]: 'The argument provided is not a valid ISO date string',\r\n    [CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE]: 'Not support non-string message',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE]: 'cannot support promise value',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION]: 'cannot support async function',\r\n    [CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE]: 'cannot support locale type'\r\n};\r\n\r\n/** @internal */\r\nfunction getLocale(context, options) {\r\n    return options.locale != null\r\n        ? resolveLocale(options.locale)\r\n        : resolveLocale(context.locale);\r\n}\r\nlet _resolveLocale;\r\n/** @internal */\r\nfunction resolveLocale(locale) {\r\n    if (isString(locale)) {\r\n        return locale;\r\n    }\r\n    else {\r\n        if (isFunction(locale)) {\r\n            if (locale.resolvedOnce && _resolveLocale != null) {\r\n                return _resolveLocale;\r\n            }\r\n            else if (locale.constructor.name === 'Function') {\r\n                const resolve = locale();\r\n                if (isPromise(resolve)) {\r\n                    throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);\r\n                }\r\n                return (_resolveLocale = resolve);\r\n            }\r\n            else {\r\n                throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);\r\n            }\r\n        }\r\n        else {\r\n            throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Fallback with simple implemenation\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a simple fallback algorithm.\r\n *\r\n * Basically, it returns the value as specified in the `fallbackLocale` props, and is processed with the fallback inside intlify.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithSimple(ctx, fallback, start // eslint-disable-line @typescript-eslint/no-unused-vars\r\n) {\r\n    // prettier-ignore\r\n    return [...new Set([\r\n            start,\r\n            ...(isArray(fallback)\r\n                ? fallback\r\n                : isObject(fallback)\r\n                    ? Object.keys(fallback)\r\n                    : isString(fallback)\r\n                        ? [fallback]\r\n                        : [start])\r\n        ])];\r\n}\r\n/**\r\n * Fallback with locale chain\r\n *\r\n * @remarks\r\n * A fallback locale function implemented with a fallback chain algorithm. It's used in VueI18n as default.\r\n *\r\n * @param ctx - A {@link CoreContext | context}\r\n * @param fallback - A {@link FallbackLocale | fallback locale}\r\n * @param start - A starting {@link Locale | locale}\r\n *\r\n * @returns Fallback locales\r\n *\r\n * @VueI18nSee [Fallbacking](../guide/essentials/fallback)\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction fallbackWithLocaleChain(ctx, fallback, start) {\r\n    const startLocale = isString(start) ? start : DEFAULT_LOCALE;\r\n    const context = ctx;\r\n    if (!context.__localeChainCache) {\r\n        context.__localeChainCache = new Map();\r\n    }\r\n    let chain = context.__localeChainCache.get(startLocale);\r\n    if (!chain) {\r\n        chain = [];\r\n        // first block defined by start\r\n        let block = [start];\r\n        // while any intervening block found\r\n        while (isArray(block)) {\r\n            block = appendBlockToChain(chain, block, fallback);\r\n        }\r\n        // prettier-ignore\r\n        // last block defined by default\r\n        const defaults = isArray(fallback) || !isPlainObject(fallback)\r\n            ? fallback\r\n            : fallback['default']\r\n                ? fallback['default']\r\n                : null;\r\n        // convert defaults to array\r\n        block = isString(defaults) ? [defaults] : defaults;\r\n        if (isArray(block)) {\r\n            appendBlockToChain(chain, block, false);\r\n        }\r\n        context.__localeChainCache.set(startLocale, chain);\r\n    }\r\n    return chain;\r\n}\r\nfunction appendBlockToChain(chain, block, blocks) {\r\n    let follow = true;\r\n    for (let i = 0; i < block.length && isBoolean(follow); i++) {\r\n        const locale = block[i];\r\n        if (isString(locale)) {\r\n            follow = appendLocaleToChain(chain, block[i], blocks);\r\n        }\r\n    }\r\n    return follow;\r\n}\r\nfunction appendLocaleToChain(chain, locale, blocks) {\r\n    let follow;\r\n    const tokens = locale.split('-');\r\n    do {\r\n        const target = tokens.join('-');\r\n        follow = appendItemToChain(chain, target, blocks);\r\n        tokens.splice(-1, 1);\r\n    } while (tokens.length && follow === true);\r\n    return follow;\r\n}\r\nfunction appendItemToChain(chain, target, blocks) {\r\n    let follow = false;\r\n    if (!chain.includes(target)) {\r\n        follow = true;\r\n        if (target) {\r\n            follow = target[target.length - 1] !== '!';\r\n            const locale = target.replace(/!/g, '');\r\n            chain.push(locale);\r\n            if ((isArray(blocks) || isPlainObject(blocks)) &&\r\n                blocks[locale] // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            ) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                follow = blocks[locale];\r\n            }\r\n        }\r\n    }\r\n    return follow;\r\n}\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Intlify core-base version\r\n * @internal\r\n */\r\nconst VERSION = '9.13.1';\r\nconst NOT_REOSLVED = -1;\r\nconst DEFAULT_LOCALE = 'en-US';\r\nconst MISSING_RESOLVE_VALUE = '';\r\nconst capitalize = (str) => `${str.charAt(0).toLocaleUpperCase()}${str.substr(1)}`;\r\nfunction getDefaultLinkedModifiers() {\r\n    return {\r\n        upper: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toUpperCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toUpperCase()\r\n                    : val;\r\n        },\r\n        lower: (val, type) => {\r\n            // prettier-ignore\r\n            return type === 'text' && isString(val)\r\n                ? val.toLowerCase()\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? val.children.toLowerCase()\r\n                    : val;\r\n        },\r\n        capitalize: (val, type) => {\r\n            // prettier-ignore\r\n            return (type === 'text' && isString(val)\r\n                ? capitalize(val)\r\n                : type === 'vnode' && isObject(val) && '__v_isVNode' in val\r\n                    ? capitalize(val.children)\r\n                    : val);\r\n        }\r\n    };\r\n}\r\nlet _compiler;\r\nfunction registerMessageCompiler(compiler) {\r\n    _compiler = compiler;\r\n}\r\nlet _resolver;\r\n/**\r\n * Register the message resolver\r\n *\r\n * @param resolver - A {@link MessageResolver} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerMessageResolver(resolver) {\r\n    _resolver = resolver;\r\n}\r\nlet _fallbacker;\r\n/**\r\n * Register the locale fallbacker\r\n *\r\n * @param fallbacker - A {@link LocaleFallbacker} function\r\n *\r\n * @VueI18nGeneral\r\n */\r\nfunction registerLocaleFallbacker(fallbacker) {\r\n    _fallbacker = fallbacker;\r\n}\r\n// Additional Meta for Intlify DevTools\r\nlet _additionalMeta =  null;\r\n/* #__NO_SIDE_EFFECTS__ */\r\nconst setAdditionalMeta = (meta) => {\r\n    _additionalMeta = meta;\r\n};\r\n/* #__NO_SIDE_EFFECTS__ */\r\nconst getAdditionalMeta = () => _additionalMeta;\r\nlet _fallbackContext = null;\r\nconst setFallbackContext = (context) => {\r\n    _fallbackContext = context;\r\n};\r\nconst getFallbackContext = () => _fallbackContext;\r\n// ID for CoreContext\r\nlet _cid = 0;\r\nfunction createCoreContext(options = {}) {\r\n    // setup options\r\n    const onWarn = isFunction(options.onWarn) ? options.onWarn : warn;\r\n    const version = isString(options.version) ? options.version : VERSION;\r\n    const locale = isString(options.locale) || isFunction(options.locale)\r\n        ? options.locale\r\n        : DEFAULT_LOCALE;\r\n    const _locale = isFunction(locale) ? DEFAULT_LOCALE : locale;\r\n    const fallbackLocale = isArray(options.fallbackLocale) ||\r\n        isPlainObject(options.fallbackLocale) ||\r\n        isString(options.fallbackLocale) ||\r\n        options.fallbackLocale === false\r\n        ? options.fallbackLocale\r\n        : _locale;\r\n    const messages = isPlainObject(options.messages)\r\n        ? options.messages\r\n        : { [_locale]: {} };\r\n    const datetimeFormats = isPlainObject(options.datetimeFormats)\r\n            ? options.datetimeFormats\r\n            : { [_locale]: {} }\r\n        ;\r\n    const numberFormats = isPlainObject(options.numberFormats)\r\n            ? options.numberFormats\r\n            : { [_locale]: {} }\r\n        ;\r\n    const modifiers = assign({}, options.modifiers || {}, getDefaultLinkedModifiers());\r\n    const pluralRules = options.pluralRules || {};\r\n    const missing = isFunction(options.missing) ? options.missing : null;\r\n    const missingWarn = isBoolean(options.missingWarn) || isRegExp(options.missingWarn)\r\n        ? options.missingWarn\r\n        : true;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn) || isRegExp(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : true;\r\n    const fallbackFormat = !!options.fallbackFormat;\r\n    const unresolving = !!options.unresolving;\r\n    const postTranslation = isFunction(options.postTranslation)\r\n        ? options.postTranslation\r\n        : null;\r\n    const processor = isPlainObject(options.processor) ? options.processor : null;\r\n    const warnHtmlMessage = isBoolean(options.warnHtmlMessage)\r\n        ? options.warnHtmlMessage\r\n        : true;\r\n    const escapeParameter = !!options.escapeParameter;\r\n    const messageCompiler = isFunction(options.messageCompiler)\r\n        ? options.messageCompiler\r\n        : _compiler;\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !false &&\r\n        !false &&\r\n        isFunction(options.messageCompiler)) {\r\n        warnOnce(getWarnMessage(CoreWarnCodes.EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER));\r\n    }\r\n    const messageResolver = isFunction(options.messageResolver)\r\n        ? options.messageResolver\r\n        : _resolver || resolveWithKeyValue;\r\n    const localeFallbacker = isFunction(options.localeFallbacker)\r\n        ? options.localeFallbacker\r\n        : _fallbacker || fallbackWithSimple;\r\n    const fallbackContext = isObject(options.fallbackContext)\r\n        ? options.fallbackContext\r\n        : undefined;\r\n    // setup internal options\r\n    const internalOptions = options;\r\n    const __datetimeFormatters = isObject(internalOptions.__datetimeFormatters)\r\n            ? internalOptions.__datetimeFormatters\r\n            : new Map()\r\n        ;\r\n    const __numberFormatters = isObject(internalOptions.__numberFormatters)\r\n            ? internalOptions.__numberFormatters\r\n            : new Map()\r\n        ;\r\n    const __meta = isObject(internalOptions.__meta) ? internalOptions.__meta : {};\r\n    _cid++;\r\n    const context = {\r\n        version,\r\n        cid: _cid,\r\n        locale,\r\n        fallbackLocale,\r\n        messages,\r\n        modifiers,\r\n        pluralRules,\r\n        missing,\r\n        missingWarn,\r\n        fallbackWarn,\r\n        fallbackFormat,\r\n        unresolving,\r\n        postTranslation,\r\n        processor,\r\n        warnHtmlMessage,\r\n        escapeParameter,\r\n        messageCompiler,\r\n        messageResolver,\r\n        localeFallbacker,\r\n        fallbackContext,\r\n        onWarn,\r\n        __meta\r\n    };\r\n    {\r\n        context.datetimeFormats = datetimeFormats;\r\n        context.numberFormats = numberFormats;\r\n        context.__datetimeFormatters = __datetimeFormatters;\r\n        context.__numberFormatters = __numberFormatters;\r\n    }\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.__v_emitter =\r\n            internalOptions.__v_emitter != null\r\n                ? internalOptions.__v_emitter\r\n                : undefined;\r\n    }\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        initI18nDevTools(context, version, __meta);\r\n    }\r\n    return context;\r\n}\r\n/** @internal */\r\nfunction isTranslateFallbackWarn(fallback, key) {\r\n    return fallback instanceof RegExp ? fallback.test(key) : fallback;\r\n}\r\n/** @internal */\r\nfunction isTranslateMissingWarn(missing, key) {\r\n    return missing instanceof RegExp ? missing.test(key) : missing;\r\n}\r\n/** @internal */\r\nfunction handleMissing(context, key, locale, missingWarn, type) {\r\n    const { missing, onWarn } = context;\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const emitter = context.__v_emitter;\r\n        if (emitter) {\r\n            emitter.emit(\"missing\" /* VueDevToolsTimelineEvents.MISSING */, {\r\n                locale,\r\n                key,\r\n                type,\r\n                groupId: `${type}:${key}`\r\n            });\r\n        }\r\n    }\r\n    if (missing !== null) {\r\n        const ret = missing(context, locale, key, type);\r\n        return isString(ret) ? ret : key;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && isTranslateMissingWarn(missingWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.NOT_FOUND_KEY, { key, locale }));\r\n        }\r\n        return key;\r\n    }\r\n}\r\n/** @internal */\r\nfunction updateFallbackLocale(ctx, locale, fallback) {\r\n    const context = ctx;\r\n    context.__localeChainCache = new Map();\r\n    ctx.localeFallbacker(ctx, fallback, locale);\r\n}\r\n/** @internal */\r\nfunction isAlmostSameLocale(locale, compareLocale) {\r\n    if (locale === compareLocale)\r\n        return false;\r\n    return locale.split('-')[0] === compareLocale.split('-')[0];\r\n}\r\n/** @internal */\r\nfunction isImplicitFallback(targetLocale, locales) {\r\n    const index = locales.indexOf(targetLocale);\r\n    if (index === -1) {\r\n        return false;\r\n    }\r\n    for (let i = index + 1; i < locales.length; i++) {\r\n        if (isAlmostSameLocale(targetLocale, locales[i])) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n/* eslint-enable @typescript-eslint/no-explicit-any */\r\n\r\nfunction format(ast) {\r\n    const msg = (ctx) => formatParts(ctx, ast);\r\n    return msg;\r\n}\r\nfunction formatParts(ctx, ast) {\r\n    const body = ast.b || ast.body;\r\n    if ((body.t || body.type) === 1 /* NodeTypes.Plural */) {\r\n        const plural = body;\r\n        const cases = plural.c || plural.cases;\r\n        return ctx.plural(cases.reduce((messages, c) => [\r\n            ...messages,\r\n            formatMessageParts(ctx, c)\r\n        ], []));\r\n    }\r\n    else {\r\n        return formatMessageParts(ctx, body);\r\n    }\r\n}\r\nfunction formatMessageParts(ctx, node) {\r\n    const _static = node.s || node.static;\r\n    if (_static) {\r\n        return ctx.type === 'text'\r\n            ? _static\r\n            : ctx.normalize([_static]);\r\n    }\r\n    else {\r\n        const messages = (node.i || node.items).reduce((acm, c) => [...acm, formatMessagePart(ctx, c)], []);\r\n        return ctx.normalize(messages);\r\n    }\r\n}\r\nfunction formatMessagePart(ctx, node) {\r\n    const type = node.t || node.type;\r\n    switch (type) {\r\n        case 3 /* NodeTypes.Text */: {\r\n            const text = node;\r\n            return (text.v || text.value);\r\n        }\r\n        case 9 /* NodeTypes.Literal */: {\r\n            const literal = node;\r\n            return (literal.v || literal.value);\r\n        }\r\n        case 4 /* NodeTypes.Named */: {\r\n            const named = node;\r\n            return ctx.interpolate(ctx.named(named.k || named.key));\r\n        }\r\n        case 5 /* NodeTypes.List */: {\r\n            const list = node;\r\n            return ctx.interpolate(ctx.list(list.i != null ? list.i : list.index));\r\n        }\r\n        case 6 /* NodeTypes.Linked */: {\r\n            const linked = node;\r\n            const modifier = linked.m || linked.modifier;\r\n            return ctx.linked(formatMessagePart(ctx, linked.k || linked.key), modifier ? formatMessagePart(ctx, modifier) : undefined, ctx.type);\r\n        }\r\n        case 7 /* NodeTypes.LinkedKey */: {\r\n            const linkedKey = node;\r\n            return (linkedKey.v || linkedKey.value);\r\n        }\r\n        case 8 /* NodeTypes.LinkedModifier */: {\r\n            const linkedModifier = node;\r\n            return (linkedModifier.v || linkedModifier.value);\r\n        }\r\n        default:\r\n            throw new Error(`unhandled node type on format message part: ${type}`);\r\n    }\r\n}\r\n\r\nconst WARN_MESSAGE = `Detected HTML in '{source}' message. Recommend not using HTML messages to avoid XSS.`;\r\nfunction checkHtmlMessage(source, warnHtmlMessage) {\r\n    if (warnHtmlMessage && detectHtmlTag(source)) {\r\n        warn(format$1(WARN_MESSAGE, { source }));\r\n    }\r\n}\r\nconst defaultOnCacheKey = (message) => message;\r\nlet compileCache = Object.create(null);\r\nfunction onCompileWarn(_warn) {\r\n    if (_warn.code === CompileWarnCodes.USE_MODULO_SYNTAX) {\r\n        warn(`The use of named interpolation with modulo syntax is deprecated. ` +\r\n            `It will be removed in v10.\\n` +\r\n            `reference: https://vue-i18n.intlify.dev/guide/essentials/syntax#rails-i18n-format \\n` +\r\n            `(message compiler warning message: ${_warn.message})`);\r\n    }\r\n}\r\nfunction clearCompileCache() {\r\n    compileCache = Object.create(null);\r\n}\r\nconst isMessageAST = (val) => isObject(val) &&\r\n    (val.t === 0 || val.type === 0) &&\r\n    ('b' in val || 'body' in val);\r\nfunction baseCompile(message, options = {}) {\r\n    // error detecting on compile\r\n    let detectError = false;\r\n    const onError = options.onError || defaultOnError;\r\n    options.onError = (err) => {\r\n        detectError = true;\r\n        onError(err);\r\n    };\r\n    // compile with mesasge-compiler\r\n    return { ...baseCompile$1(message, options), detectError };\r\n}\r\n/* #__NO_SIDE_EFFECTS__ */\r\nconst compileToFunction = (message, context) => {\r\n    if (!isString(message)) {\r\n        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_NON_STRING_MESSAGE);\r\n    }\r\n    // set onWarn\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.onWarn = onCompileWarn;\r\n    }\r\n    {\r\n        // check HTML message\r\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\r\n            ? context.warnHtmlMessage\r\n            : true;\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\r\n        // check caches\r\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\r\n        const cacheKey = onCacheKey(message);\r\n        const cached = compileCache[cacheKey];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile\r\n        const { code, detectError } = baseCompile(message, context);\r\n        // evaluate function\r\n        const msg = new Function(`return ${code}`)();\r\n        // if occurred compile error, don't cache\r\n        return !detectError\r\n            ? (compileCache[cacheKey] = msg)\r\n            : msg;\r\n    }\r\n};\r\nfunction compile(message, context) {\r\n    // set onWarn\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        context.onWarn = onCompileWarn;\r\n    }\r\n    if (((__INTLIFY_JIT_COMPILATION__ && !__INTLIFY_DROP_MESSAGE_COMPILER__)) &&\r\n        isString(message)) {\r\n        // check HTML message\r\n        const warnHtmlMessage = isBoolean(context.warnHtmlMessage)\r\n            ? context.warnHtmlMessage\r\n            : true;\r\n        (process.env.NODE_ENV !== 'production') && checkHtmlMessage(message, warnHtmlMessage);\r\n        // check caches\r\n        const onCacheKey = context.onCacheKey || defaultOnCacheKey;\r\n        const cacheKey = onCacheKey(message);\r\n        const cached = compileCache[cacheKey];\r\n        if (cached) {\r\n            return cached;\r\n        }\r\n        // compile with JIT mode\r\n        const { ast, detectError } = baseCompile(message, {\r\n            ...context,\r\n            location: (process.env.NODE_ENV !== 'production'),\r\n            jit: true\r\n        });\r\n        // compose message function from AST\r\n        const msg = format(ast);\r\n        // if occurred compile error, don't cache\r\n        return !detectError\r\n            ? (compileCache[cacheKey] = msg)\r\n            : msg;\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !isMessageAST(message)) {\r\n            warn(`the message that is resolve with key '${context.key}' is not supported for jit compilation`);\r\n            return (() => message);\r\n        }\r\n        // AST case (passed from bundler)\r\n        const cacheKey = message.cacheKey;\r\n        if (cacheKey) {\r\n            const cached = compileCache[cacheKey];\r\n            if (cached) {\r\n                return cached;\r\n            }\r\n            // compose message function from message (AST)\r\n            return (compileCache[cacheKey] =\r\n                format(message));\r\n        }\r\n        else {\r\n            return format(message);\r\n        }\r\n    }\r\n}\r\n\r\nconst NOOP_MESSAGE_FUNCTION = () => '';\r\nconst isMessageFunction = (val) => isFunction(val);\r\n// implementation of `translate` function\r\nfunction translate(context, ...args) {\r\n    const { fallbackFormat, postTranslation, unresolving, messageCompiler, fallbackLocale, messages } = context;\r\n    const [key, options] = parseTranslateArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const escapeParameter = isBoolean(options.escapeParameter)\r\n        ? options.escapeParameter\r\n        : context.escapeParameter;\r\n    const resolvedMessage = !!options.resolvedMessage;\r\n    // prettier-ignore\r\n    const defaultMsgOrKey = isString(options.default) || isBoolean(options.default) // default by function option\r\n        ? !isBoolean(options.default)\r\n            ? options.default\r\n            : (!messageCompiler ? () => key : key)\r\n        : fallbackFormat // default by `fallbackFormat` option\r\n            ? (!messageCompiler ? () => key : key)\r\n            : '';\r\n    const enableDefaultMsg = fallbackFormat || defaultMsgOrKey !== '';\r\n    const locale = getLocale(context, options);\r\n    // escape params\r\n    escapeParameter && escapeParams(options);\r\n    // resolve message format\r\n    // eslint-disable-next-line prefer-const\r\n    let [formatScope, targetLocale, message] = !resolvedMessage\r\n        ? resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn)\r\n        : [\r\n            key,\r\n            locale,\r\n            messages[locale] || {}\r\n        ];\r\n    // NOTE:\r\n    //  Fix to work around `ssrTransfrom` bug in Vite.\r\n    //  https://github.com/vitejs/vite/issues/4306\r\n    //  To get around this, use temporary variables.\r\n    //  https://github.com/nuxt/framework/issues/1461#issuecomment-954606243\r\n    let format = formatScope;\r\n    // if you use default message, set it as message format!\r\n    let cacheBaseKey = key;\r\n    if (!resolvedMessage &&\r\n        !(isString(format) ||\r\n            isMessageAST(format) ||\r\n            isMessageFunction(format))) {\r\n        if (enableDefaultMsg) {\r\n            format = defaultMsgOrKey;\r\n            cacheBaseKey = format;\r\n        }\r\n    }\r\n    // checking message format and target locale\r\n    if (!resolvedMessage &&\r\n        (!(isString(format) ||\r\n            isMessageAST(format) ||\r\n            isMessageFunction(format)) ||\r\n            !isString(targetLocale))) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    // TODO: refactor\r\n    if ((process.env.NODE_ENV !== 'production') && isString(format) && context.messageCompiler == null) {\r\n        warn(`The message format compilation is not supported in this build. ` +\r\n            `Because message compiler isn't included. ` +\r\n            `You need to pre-compilation all message format. ` +\r\n            `So translate function return '${key}'.`);\r\n        return key;\r\n    }\r\n    // setup compile error detecting\r\n    let occurred = false;\r\n    const onError = () => {\r\n        occurred = true;\r\n    };\r\n    // compile message format\r\n    const msg = !isMessageFunction(format)\r\n        ? compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError)\r\n        : format;\r\n    // if occurred compile error, return the message format\r\n    if (occurred) {\r\n        return format;\r\n    }\r\n    // evaluate message with context\r\n    const ctxOptions = getMessageContextOptions(context, targetLocale, message, options);\r\n    const msgContext = createMessageContext(ctxOptions);\r\n    const messaged = evaluateMessage(context, msg, msgContext);\r\n    // if use post translation option, proceed it with handler\r\n    const ret = postTranslation\r\n        ? postTranslation(messaged, key)\r\n        : messaged;\r\n    // NOTE: experimental !!\r\n    if ((process.env.NODE_ENV !== 'production') || __INTLIFY_PROD_DEVTOOLS__) {\r\n        // prettier-ignore\r\n        const payloads = {\r\n            timestamp: Date.now(),\r\n            key: isString(key)\r\n                ? key\r\n                : isMessageFunction(format)\r\n                    ? format.key\r\n                    : '',\r\n            locale: targetLocale || (isMessageFunction(format)\r\n                ? format.locale\r\n                : ''),\r\n            format: isString(format)\r\n                ? format\r\n                : isMessageFunction(format)\r\n                    ? format.source\r\n                    : '',\r\n            message: ret\r\n        };\r\n        payloads.meta = assign({}, context.__meta, getAdditionalMeta() || {});\r\n        translateDevTools(payloads);\r\n    }\r\n    return ret;\r\n}\r\nfunction escapeParams(options) {\r\n    if (isArray(options.list)) {\r\n        options.list = options.list.map(item => isString(item) ? escapeHtml(item) : item);\r\n    }\r\n    else if (isObject(options.named)) {\r\n        Object.keys(options.named).forEach(key => {\r\n            if (isString(options.named[key])) {\r\n                options.named[key] = escapeHtml(options.named[key]);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction resolveMessageFormat(context, key, locale, fallbackLocale, fallbackWarn, missingWarn) {\r\n    const { messages, onWarn, messageResolver: resolveValue, localeFallbacker } = context;\r\n    const locales = localeFallbacker(context, fallbackLocale, locale); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    let message = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'translate';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            !isAlmostSameLocale(locale, targetLocale) &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_TRANSLATE, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        message =\r\n            messages[targetLocale] || {};\r\n        // for vue-devtools timeline event\r\n        let start = null;\r\n        let startTag;\r\n        let endTag;\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            start = window.performance.now();\r\n            startTag = 'intlify-message-resolve-start';\r\n            endTag = 'intlify-message-resolve-end';\r\n            mark && mark(startTag);\r\n        }\r\n        if ((format = resolveValue(message, key)) === null) {\r\n            // if null, resolve with object key path\r\n            format = message[key]; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n            const end = window.performance.now();\r\n            const emitter = context.__v_emitter;\r\n            if (emitter && start && format) {\r\n                emitter.emit(\"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */, {\r\n                    type: \"message-resolve\" /* VueDevToolsTimelineEvents.MESSAGE_RESOLVE */,\r\n                    key,\r\n                    message: format,\r\n                    time: end - start,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n            if (startTag && endTag && mark && measure) {\r\n                mark(endTag);\r\n                measure('intlify message resolve', startTag, endTag);\r\n            }\r\n        }\r\n        if (isString(format) || isMessageAST(format) || isMessageFunction(format)) {\r\n            break;\r\n        }\r\n        if (!isImplicitFallback(targetLocale, locales)) {\r\n            const missingRet = handleMissing(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n            key, targetLocale, missingWarn, type);\r\n            if (missingRet !== key) {\r\n                format = missingRet;\r\n            }\r\n        }\r\n        from = to;\r\n    }\r\n    return [format, targetLocale, message];\r\n}\r\nfunction compileMessageFormat(context, key, targetLocale, format, cacheBaseKey, onError) {\r\n    const { messageCompiler, warnHtmlMessage } = context;\r\n    if (isMessageFunction(format)) {\r\n        const msg = format;\r\n        msg.locale = msg.locale || targetLocale;\r\n        msg.key = msg.key || key;\r\n        return msg;\r\n    }\r\n    if (messageCompiler == null) {\r\n        const msg = (() => format);\r\n        msg.locale = targetLocale;\r\n        msg.key = key;\r\n        return msg;\r\n    }\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-compilation-start';\r\n        endTag = 'intlify-message-compilation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const msg = messageCompiler(format, getCompileContext(context, targetLocale, cacheBaseKey, format, warnHtmlMessage, onError));\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */, {\r\n                type: \"message-compilation\" /* VueDevToolsTimelineEvents.MESSAGE_COMPILATION */,\r\n                message: format,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message compilation', startTag, endTag);\r\n        }\r\n    }\r\n    msg.locale = targetLocale;\r\n    msg.key = key;\r\n    msg.source = format;\r\n    return msg;\r\n}\r\nfunction evaluateMessage(context, msg, msgCtx) {\r\n    // for vue-devtools timeline event\r\n    let start = null;\r\n    let startTag;\r\n    let endTag;\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        start = window.performance.now();\r\n        startTag = 'intlify-message-evaluation-start';\r\n        endTag = 'intlify-message-evaluation-end';\r\n        mark && mark(startTag);\r\n    }\r\n    const messaged = msg(msgCtx);\r\n    // for vue-devtools timeline event\r\n    if ((process.env.NODE_ENV !== 'production') && inBrowser) {\r\n        const end = window.performance.now();\r\n        const emitter = context.__v_emitter;\r\n        if (emitter && start) {\r\n            emitter.emit(\"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */, {\r\n                type: \"message-evaluation\" /* VueDevToolsTimelineEvents.MESSAGE_EVALUATION */,\r\n                value: messaged,\r\n                time: end - start,\r\n                groupId: `${'translate'}:${msg.key}`\r\n            });\r\n        }\r\n        if (startTag && endTag && mark && measure) {\r\n            mark(endTag);\r\n            measure('intlify message evaluation', startTag, endTag);\r\n        }\r\n    }\r\n    return messaged;\r\n}\r\n/** @internal */\r\nfunction parseTranslateArgs(...args) {\r\n    const [arg1, arg2, arg3] = args;\r\n    const options = {};\r\n    if (!isString(arg1) &&\r\n        !isNumber(arg1) &&\r\n        !isMessageFunction(arg1) &&\r\n        !isMessageAST(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    // prettier-ignore\r\n    const key = isNumber(arg1)\r\n        ? String(arg1)\r\n        : isMessageFunction(arg1)\r\n            ? arg1\r\n            : arg1;\r\n    if (isNumber(arg2)) {\r\n        options.plural = arg2;\r\n    }\r\n    else if (isString(arg2)) {\r\n        options.default = arg2;\r\n    }\r\n    else if (isPlainObject(arg2) && !isEmptyObject(arg2)) {\r\n        options.named = arg2;\r\n    }\r\n    else if (isArray(arg2)) {\r\n        options.list = arg2;\r\n    }\r\n    if (isNumber(arg3)) {\r\n        options.plural = arg3;\r\n    }\r\n    else if (isString(arg3)) {\r\n        options.default = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        assign(options, arg3);\r\n    }\r\n    return [key, options];\r\n}\r\nfunction getCompileContext(context, locale, key, source, warnHtmlMessage, onError) {\r\n    return {\r\n        locale,\r\n        key,\r\n        warnHtmlMessage,\r\n        onError: (err) => {\r\n            onError && onError(err);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                const _source = getSourceForCodeFrame(source);\r\n                const message = `Message compilation error: ${err.message}`;\r\n                const codeFrame = err.location &&\r\n                    _source &&\r\n                    generateCodeFrame(_source, err.location.start.offset, err.location.end.offset);\r\n                const emitter = context.__v_emitter;\r\n                if (emitter && _source) {\r\n                    emitter.emit(\"compile-error\" /* VueDevToolsTimelineEvents.COMPILE_ERROR */, {\r\n                        message: _source,\r\n                        error: err.message,\r\n                        start: err.location && err.location.start.offset,\r\n                        end: err.location && err.location.end.offset,\r\n                        groupId: `${'translate'}:${key}`\r\n                    });\r\n                }\r\n                console.error(codeFrame ? `${message}\\n${codeFrame}` : message);\r\n            }\r\n            else {\r\n                throw err;\r\n            }\r\n        },\r\n        onCacheKey: (source) => generateFormatCacheKey(locale, key, source)\r\n    };\r\n}\r\nfunction getSourceForCodeFrame(source) {\r\n    if (isString(source)) {\r\n        return source;\r\n    }\r\n    else {\r\n        if (source.loc && source.loc.source) {\r\n            return source.loc.source;\r\n        }\r\n    }\r\n}\r\nfunction getMessageContextOptions(context, locale, message, options) {\r\n    const { modifiers, pluralRules, messageResolver: resolveValue, fallbackLocale, fallbackWarn, missingWarn, fallbackContext } = context;\r\n    const resolveMessage = (key) => {\r\n        let val = resolveValue(message, key);\r\n        // fallback to root context\r\n        if (val == null && fallbackContext) {\r\n            const [, , message] = resolveMessageFormat(fallbackContext, key, locale, fallbackLocale, fallbackWarn, missingWarn);\r\n            val = resolveValue(message, key);\r\n        }\r\n        if (isString(val) || isMessageAST(val)) {\r\n            let occurred = false;\r\n            const onError = () => {\r\n                occurred = true;\r\n            };\r\n            const msg = compileMessageFormat(context, key, locale, val, key, onError);\r\n            return !occurred\r\n                ? msg\r\n                : NOOP_MESSAGE_FUNCTION;\r\n        }\r\n        else if (isMessageFunction(val)) {\r\n            return val;\r\n        }\r\n        else {\r\n            // TODO: should be implemented warning message\r\n            return NOOP_MESSAGE_FUNCTION;\r\n        }\r\n    };\r\n    const ctxOptions = {\r\n        locale,\r\n        modifiers,\r\n        pluralRules,\r\n        messages: resolveMessage\r\n    };\r\n    if (context.processor) {\r\n        ctxOptions.processor = context.processor;\r\n    }\r\n    if (options.list) {\r\n        ctxOptions.list = options.list;\r\n    }\r\n    if (options.named) {\r\n        ctxOptions.named = options.named;\r\n    }\r\n    if (isNumber(options.plural)) {\r\n        ctxOptions.pluralIndex = options.plural;\r\n    }\r\n    return ctxOptions;\r\n}\r\n\r\nconst intlDefined = typeof Intl !== 'undefined';\r\nconst Availabilities = {\r\n    dateTimeFormat: intlDefined && typeof Intl.DateTimeFormat !== 'undefined',\r\n    numberFormat: intlDefined && typeof Intl.NumberFormat !== 'undefined'\r\n};\r\n\r\n// implementation of `datetime` function\r\nfunction datetime(context, ...args) {\r\n    const { datetimeFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __datetimeFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.dateTimeFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_DATE));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseDateTimeArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = getLocale(context, options);\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.DateTimeFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let datetimeFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'datetime format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_DATE_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        datetimeFormat =\r\n            datetimeFormats[targetLocale] || {};\r\n        format = datetimeFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __datetimeFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.DateTimeFormat(targetLocale, assign({}, format, overrides));\r\n        __datetimeFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst DATETIME_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'weekday',\r\n    'era',\r\n    'year',\r\n    'month',\r\n    'day',\r\n    'hour',\r\n    'minute',\r\n    'second',\r\n    'timeZoneName',\r\n    'formatMatcher',\r\n    'hour12',\r\n    'timeZone',\r\n    'dateStyle',\r\n    'timeStyle',\r\n    'calendar',\r\n    'dayPeriod',\r\n    'numberingSystem',\r\n    'hourCycle',\r\n    'fractionalSecondDigits'\r\n];\r\n/** @internal */\r\nfunction parseDateTimeArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    let value;\r\n    if (isString(arg1)) {\r\n        // Only allow ISO strings - other date formats are often supported,\r\n        // but may cause different results in different browsers.\r\n        const matches = arg1.match(/(\\d{4}-\\d{2}-\\d{2})(T|\\s)?(.*)/);\r\n        if (!matches) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n        // Some browsers can not parse the iso datetime separated by space,\r\n        // this is a compromise solution by replace the 'T'/' ' with 'T'\r\n        const dateTime = matches[3]\r\n            ? matches[3].trim().startsWith('T')\r\n                ? `${matches[1].trim()}${matches[3].trim()}`\r\n                : `${matches[1].trim()}T${matches[3].trim()}`\r\n            : matches[1].trim();\r\n        value = new Date(dateTime);\r\n        try {\r\n            // This will fail if the date is not valid\r\n            value.toISOString();\r\n        }\r\n        catch (e) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);\r\n        }\r\n    }\r\n    else if (isDate(arg1)) {\r\n        if (isNaN(arg1.getTime())) {\r\n            throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);\r\n        }\r\n        value = arg1;\r\n    }\r\n    else if (isNumber(arg1)) {\r\n        value = arg1;\r\n    }\r\n    else {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (DATETIME_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearDateTimeFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__datetimeFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__datetimeFormatters.delete(id);\r\n    }\r\n}\r\n\r\n// implementation of `number` function\r\nfunction number(context, ...args) {\r\n    const { numberFormats, unresolving, fallbackLocale, onWarn, localeFallbacker } = context;\r\n    const { __numberFormatters } = context;\r\n    if ((process.env.NODE_ENV !== 'production') && !Availabilities.numberFormat) {\r\n        onWarn(getWarnMessage(CoreWarnCodes.CANNOT_FORMAT_NUMBER));\r\n        return MISSING_RESOLVE_VALUE;\r\n    }\r\n    const [key, value, options, overrides] = parseNumberArgs(...args);\r\n    const missingWarn = isBoolean(options.missingWarn)\r\n        ? options.missingWarn\r\n        : context.missingWarn;\r\n    const fallbackWarn = isBoolean(options.fallbackWarn)\r\n        ? options.fallbackWarn\r\n        : context.fallbackWarn;\r\n    const part = !!options.part;\r\n    const locale = getLocale(context, options);\r\n    const locales = localeFallbacker(context, // eslint-disable-line @typescript-eslint/no-explicit-any\r\n    fallbackLocale, locale);\r\n    if (!isString(key) || key === '') {\r\n        return new Intl.NumberFormat(locale, overrides).format(value);\r\n    }\r\n    // resolve format\r\n    let numberFormat = {};\r\n    let targetLocale;\r\n    let format = null;\r\n    let from = locale;\r\n    let to = null;\r\n    const type = 'number format';\r\n    for (let i = 0; i < locales.length; i++) {\r\n        targetLocale = to = locales[i];\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            locale !== targetLocale &&\r\n            isTranslateFallbackWarn(fallbackWarn, key)) {\r\n            onWarn(getWarnMessage(CoreWarnCodes.FALLBACK_TO_NUMBER_FORMAT, {\r\n                key,\r\n                target: targetLocale\r\n            }));\r\n        }\r\n        // for vue-devtools timeline event\r\n        if ((process.env.NODE_ENV !== 'production') && locale !== targetLocale) {\r\n            const emitter = context.__v_emitter;\r\n            if (emitter) {\r\n                emitter.emit(\"fallback\" /* VueDevToolsTimelineEvents.FALBACK */, {\r\n                    type,\r\n                    key,\r\n                    from,\r\n                    to,\r\n                    groupId: `${type}:${key}`\r\n                });\r\n            }\r\n        }\r\n        numberFormat =\r\n            numberFormats[targetLocale] || {};\r\n        format = numberFormat[key];\r\n        if (isPlainObject(format))\r\n            break;\r\n        handleMissing(context, key, targetLocale, missingWarn, type); // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        from = to;\r\n    }\r\n    // checking format and target locale\r\n    if (!isPlainObject(format) || !isString(targetLocale)) {\r\n        return unresolving ? NOT_REOSLVED : key;\r\n    }\r\n    let id = `${targetLocale}__${key}`;\r\n    if (!isEmptyObject(overrides)) {\r\n        id = `${id}__${JSON.stringify(overrides)}`;\r\n    }\r\n    let formatter = __numberFormatters.get(id);\r\n    if (!formatter) {\r\n        formatter = new Intl.NumberFormat(targetLocale, assign({}, format, overrides));\r\n        __numberFormatters.set(id, formatter);\r\n    }\r\n    return !part ? formatter.format(value) : formatter.formatToParts(value);\r\n}\r\n/** @internal */\r\nconst NUMBER_FORMAT_OPTIONS_KEYS = [\r\n    'localeMatcher',\r\n    'style',\r\n    'currency',\r\n    'currencyDisplay',\r\n    'currencySign',\r\n    'useGrouping',\r\n    'minimumIntegerDigits',\r\n    'minimumFractionDigits',\r\n    'maximumFractionDigits',\r\n    'minimumSignificantDigits',\r\n    'maximumSignificantDigits',\r\n    'compactDisplay',\r\n    'notation',\r\n    'signDisplay',\r\n    'unit',\r\n    'unitDisplay',\r\n    'roundingMode',\r\n    'roundingPriority',\r\n    'roundingIncrement',\r\n    'trailingZeroDisplay'\r\n];\r\n/** @internal */\r\nfunction parseNumberArgs(...args) {\r\n    const [arg1, arg2, arg3, arg4] = args;\r\n    const options = {};\r\n    let overrides = {};\r\n    if (!isNumber(arg1)) {\r\n        throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);\r\n    }\r\n    const value = arg1;\r\n    if (isString(arg2)) {\r\n        options.key = arg2;\r\n    }\r\n    else if (isPlainObject(arg2)) {\r\n        Object.keys(arg2).forEach(key => {\r\n            if (NUMBER_FORMAT_OPTIONS_KEYS.includes(key)) {\r\n                overrides[key] = arg2[key];\r\n            }\r\n            else {\r\n                options[key] = arg2[key];\r\n            }\r\n        });\r\n    }\r\n    if (isString(arg3)) {\r\n        options.locale = arg3;\r\n    }\r\n    else if (isPlainObject(arg3)) {\r\n        overrides = arg3;\r\n    }\r\n    if (isPlainObject(arg4)) {\r\n        overrides = arg4;\r\n    }\r\n    return [options.key || '', value, options, overrides];\r\n}\r\n/** @internal */\r\nfunction clearNumberFormat(ctx, locale, format) {\r\n    const context = ctx;\r\n    for (const key in format) {\r\n        const id = `${locale}__${key}`;\r\n        if (!context.__numberFormatters.has(id)) {\r\n            continue;\r\n        }\r\n        context.__numberFormatters.delete(id);\r\n    }\r\n}\r\n\r\n{\r\n    initFeatureFlags();\r\n}\r\n\r\nexport { CoreErrorCodes, CoreWarnCodes, DATETIME_FORMAT_OPTIONS_KEYS, DEFAULT_LOCALE, DEFAULT_MESSAGE_DATA_TYPE, MISSING_RESOLVE_VALUE, NOT_REOSLVED, NUMBER_FORMAT_OPTIONS_KEYS, VERSION, clearCompileCache, clearDateTimeFormat, clearNumberFormat, compile, compileToFunction, createCoreContext, createCoreError, createMessageContext, datetime, fallbackWithLocaleChain, fallbackWithSimple, getAdditionalMeta, getDevToolsHook, getFallbackContext, getLocale, getWarnMessage, handleMissing, initI18nDevTools, isAlmostSameLocale, isImplicitFallback, isMessageAST, isMessageFunction, isTranslateFallbackWarn, isTranslateMissingWarn, number, parse, parseDateTimeArgs, parseNumberArgs, parseTranslateArgs, registerLocaleFallbacker, registerMessageCompiler, registerMessageResolver, resolveLocale, resolveValue, resolveWithKeyValue, setAdditionalMeta, setDevToolsHook, setFallbackContext, translate, translateDevTools, updateFallbackLocale };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}